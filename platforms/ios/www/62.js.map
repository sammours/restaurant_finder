{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm/es2017/build/fokfxvfn.sc.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;;AAE6B;AACT;;AAEzD;AACA;AACA;AACA,uBAAuB,qEAAkB,gBAAgB,sBAAsB;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,QAAQ;AACnE;AACA,oDAAoD,KAAK;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,yBAAyB,4DAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,sKAA6B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iCAAilB;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,QAAQ,4DAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAM;AACd;AACA;AACA,QAAQ,4DAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yDAAyD;AACxE;AACA;AACA;AACA,8BAA8B,KAAK;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wDAAC,SAAS,wDAAwD;AAC9E,gBAAgB,wDAAC;AACjB,YAAY,wDAAC,kBAAkB,mGAAmG;AAClI;AACA;AACA,qBAAqB,mBAAmB;AACxC,gCAAgC,iBAAiB;AACjD,6BAA6B;AAC7B;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,MAAM;AACN,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS,EAAE;AACX,4BAA4B;AAC5B;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS,EAAE;AACX,wBAAwB,4BAA4B,cAAc,iBAAiB,iBAAiB,cAAc,kBAAkB,kBAAkB,8CAA8C,OAAO,QAAQ,MAAM,SAAS,aAAa,kBAAkB,eAAe,6BAA6B,cAAc,4BAA4B,OAAO,WAAW,MAAM,SAAS,2CAA2C,mCAAmC,oBAAoB,aAAa,kBAAkB,0BAA0B,sBAAsB,sBAAsB,8BAA8B,mBAAmB,2BAA2B,2BAA2B,qBAAqB,6BAA6B,6BAA6B,6BAA6B,eAAe,wHAAwH,UAAU,QAAQ,sDAAsD,8CAA8C,iEAAiE,0BAA0B,WAAW,OAAO,+DAA+D,yBAAyB,QAAQ,UAAU,6BAA6B,aAAa,YAAY,WAAW,0BAA0B,4BAA4B,eAAe,oCAAoC,UAAU,4EAA4E,gCAAgC,wBAAwB,qCAAqC,WAAW,sEAAsE,cAAc,eAAe,mEAAmE,OAAO,QAAQ,WAAW,iCAAiC,yBAAyB,kCAAkC,0BAA0B,oEAAoE,yBAAyB,kCAAkC,WAAW,mEAAmE,cAAc,EAAE;AACjmE,4BAA4B,cAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAAC,qBAAqB,2CAA2C;AACjF,YAAY,wDAAC,YAAY,iBAAiB;AAC1C,gBAAgB,wDAAC;AACjB,oBAAoB,wDAAC,cAAc,kEAAkE;AACrG,sCAAsC,wDAAC,uBAAuB,oBAAoB;AAClF;AACA,qBAAqB,0BAA0B;AAC/C,gCAAgC,iBAAiB;AACjD,6BAA6B;AAC7B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,MAAM;AACN,wBAAwB,mCAAmC,mBAAmB,kBAAkB,qBAAqB,uBAAuB,oBAAoB,mBAAmB,0BAA0B,kBAAkB,8BAA8B,oBAAoB,kBAAkB,mBAAmB,oBAAoB,uBAAuB,wBAAwB,sBAAsB,uBAAuB,mBAAmB,oBAAoB,cAAc,kCAAkC,mCAAmC,oBAAoB,aAAa,kBAAkB,yBAAyB,qBAAqB,oBAAoB,cAAc,sBAAsB,mBAAmB,qBAAqB,uBAAuB,YAAY,SAAS,aAAa,uBAAuB,cAAc,eAAe,yBAAyB,sBAAsB,qBAAqB,iBAAiB,UAAU,wBAAwB,qBAAqB,gBAAgB,+DAA+D,cAAc,eAAe,aAAa,gBAAgB,eAAe,gBAAgB,gCAAgC,cAAc,iBAAiB,oBAAoB,4EAA4E,4BAA4B,0BAA0B,yCAAyC,oCAAoC,WAAW,8BAA8B,iBAAiB,kBAAkB,cAAc,iBAAiB,6FAA6F,8BAA8B,mBAAmB,oBAAoB,0BAA0B,yBAAyB,wBAAwB,wBAAwB,gCAAgC,eAAe,EAAE;AACr0D,4BAA4B,cAAc;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,8KAA6B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8BAA8B;AACnD,6BAA6B;AAC7B;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,MAAM;AACN,wBAAwB,uBAAuB,gCAAgC,wBAAwB,mBAAmB,eAAe,8BAA8B,0BAA0B,oBAAoB,0BAA0B,+CAA+C,uCAAuC,mCAAmC,8CAA8C,sCAAsC,gDAAgD,6EAA6E,qEAAqE,EAAE;AAChoB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wDAAC;AAChB;AACA,qBAAqB,0BAA0B;AAC/C,gCAAgC,iBAAiB;AACjD,6BAA6B;AAC7B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,MAAM;AACN,4BAA4B;AAC5B;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS,EAAE;AACX,wBAAwB,kDAAkD,aAAa,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAE0H","file":"62.js","sourcesContent":["import { h } from '../ionic.core.js';\n\nimport { g as isEndSide, h as assert } from './chunk-6d7d2f8c.js';\nimport { GESTURE_CONTROLLER } from './chunk-f56eaea8.js';\n\nclass Menu {\r\n    constructor() {\r\n        this.lastOnEnd = 0;\r\n        this.blocker = GESTURE_CONTROLLER.createBlocker({ disableScroll: true });\r\n        this.isAnimating = false;\r\n        this._isOpen = false;\r\n        this.isPaneVisible = false;\r\n        this.isEndSide = false;\r\n        this.disabled = false;\r\n        this.side = 'start';\r\n        this.swipeGesture = true;\r\n        this.maxEdgeStart = 50;\r\n    }\r\n    typeChanged(type, oldType) {\r\n        const contentEl = this.contentEl;\r\n        if (contentEl) {\r\n            if (oldType !== undefined) {\r\n                contentEl.classList.remove(`menu-content-${oldType}`);\r\n            }\r\n            contentEl.classList.add(`menu-content-${type}`);\r\n            contentEl.removeAttribute('style');\r\n        }\r\n        if (this.menuInnerEl) {\r\n            this.menuInnerEl.removeAttribute('style');\r\n        }\r\n        this.animation = undefined;\r\n    }\r\n    disabledChanged() {\r\n        this.updateState();\r\n        this.ionMenuChange.emit({\r\n            disabled: this.disabled,\r\n            open: this._isOpen\r\n        });\r\n    }\r\n    sideChanged() {\r\n        this.isEndSide = isEndSide(this.win, this.side);\r\n    }\r\n    swipeGestureChanged() {\r\n        this.updateState();\r\n    }\r\n    async componentWillLoad() {\r\n        if (this.type === undefined) {\r\n            this.type = this.config.get('menuType', this.mode === 'ios' ? 'reveal' : 'overlay');\r\n        }\r\n        if (this.isServer) {\r\n            this.disabled = true;\r\n            return;\r\n        }\r\n        const menuCtrl = this.menuCtrl = await this.lazyMenuCtrl.componentOnReady().then(p => p._getInstance());\r\n        const el = this.el;\r\n        const parent = el.parentNode;\r\n        const content = this.contentId !== undefined\r\n            ? this.doc.getElementById(this.contentId)\r\n            : parent && parent.querySelector && parent.querySelector('[main]');\r\n        if (!content || !content.tagName) {\r\n            console.error('Menu: must have a \"content\" element to listen for drag events on.');\r\n            return;\r\n        }\r\n        this.contentEl = content;\r\n        content.classList.add('menu-content');\r\n        this.typeChanged(this.type, undefined);\r\n        this.sideChanged();\r\n        menuCtrl._register(this);\r\n        this.gesture = (await import('./chunk-f56eaea8.js')).createGesture({\r\n            el: this.doc,\r\n            queue: this.queue,\r\n            gestureName: 'menu-swipe',\r\n            gesturePriority: 30,\r\n            threshold: 10,\r\n            canStart: ev => this.canStart(ev),\r\n            onWillStart: () => this.onWillStart(),\r\n            onStart: () => this.onStart(),\r\n            onMove: ev => this.onMove(ev),\r\n            onEnd: ev => this.onEnd(ev),\r\n        });\r\n        this.updateState();\r\n    }\r\n    componentDidLoad() {\r\n        this.ionMenuChange.emit({ disabled: this.disabled, open: this._isOpen });\r\n    }\r\n    componentDidUnload() {\r\n        this.blocker.destroy();\r\n        this.menuCtrl._unregister(this);\r\n        if (this.animation) {\r\n            this.animation.destroy();\r\n        }\r\n        if (this.gesture) {\r\n            this.gesture.destroy();\r\n            this.gesture = undefined;\r\n        }\r\n        this.animation = undefined;\r\n        this.contentEl = this.backdropEl = this.menuInnerEl = undefined;\r\n    }\r\n    onSplitPaneChanged(ev) {\r\n        this.isPaneVisible = ev.detail.isPane(this.el);\r\n        this.updateState();\r\n    }\r\n    onBackdropClick(ev) {\r\n        if (this.lastOnEnd < ev.timeStamp - 100) {\r\n            const shouldClose = (ev.composedPath)\r\n                ? !ev.composedPath().includes(this.menuInnerEl)\r\n                : false;\r\n            if (shouldClose) {\r\n                ev.preventDefault();\r\n                ev.stopPropagation();\r\n                this.close();\r\n            }\r\n        }\r\n    }\r\n    isOpen() {\r\n        return Promise.resolve(this._isOpen);\r\n    }\r\n    isActive() {\r\n        return Promise.resolve(this._isActive());\r\n    }\r\n    open(animated = true) {\r\n        return this.setOpen(true, animated);\r\n    }\r\n    close(animated = true) {\r\n        return this.setOpen(false, animated);\r\n    }\r\n    toggle(animated = true) {\r\n        return this.setOpen(!this._isOpen, animated);\r\n    }\r\n    setOpen(shouldOpen, animated = true) {\r\n        return this.menuCtrl._setOpen(this, shouldOpen, animated);\r\n    }\r\n    async _setOpen(shouldOpen, animated = true) {\r\n        if (!this._isActive() || this.isAnimating || shouldOpen === this._isOpen) {\r\n            return false;\r\n        }\r\n        this.beforeAnimation(shouldOpen);\r\n        await this.loadAnimation();\r\n        await this.startAnimation(shouldOpen, animated);\r\n        this.afterAnimation(shouldOpen);\r\n        return true;\r\n    }\r\n    async loadAnimation() {\r\n        const width = this.menuInnerEl.offsetWidth;\r\n        if (width === this.width && this.animation !== undefined) {\r\n            return;\r\n        }\r\n        this.width = width;\r\n        if (this.animation) {\r\n            this.animation.destroy();\r\n            this.animation = undefined;\r\n        }\r\n        this.animation = await this.menuCtrl._createAnimation(this.type, this);\r\n    }\r\n    async startAnimation(shouldOpen, animated) {\r\n        const ani = this.animation.reverse(!shouldOpen);\r\n        if (animated) {\r\n            await ani.playAsync();\r\n        }\r\n        else {\r\n            ani.playSync();\r\n        }\r\n    }\r\n    _isActive() {\r\n        return !this.disabled && !this.isPaneVisible;\r\n    }\r\n    canSwipe() {\r\n        return this.swipeGesture && !this.isAnimating && this._isActive();\r\n    }\r\n    canStart(detail) {\r\n        if (!this.canSwipe()) {\r\n            return false;\r\n        }\r\n        if (this._isOpen) {\r\n            return true;\r\n        }\r\n        else if (this.menuCtrl.getOpenSync()) {\r\n            return false;\r\n        }\r\n        return checkEdgeSide(this.win, detail.currentX, this.isEndSide, this.maxEdgeStart);\r\n    }\r\n    onWillStart() {\r\n        this.beforeAnimation(!this._isOpen);\r\n        return this.loadAnimation();\r\n    }\r\n    onStart() {\r\n        if (!this.isAnimating || !this.animation) {\r\n            assert(false, 'isAnimating has to be true');\r\n            return;\r\n        }\r\n        this.animation.reverse(this._isOpen).progressStart();\r\n    }\r\n    onMove(detail) {\r\n        if (!this.isAnimating || !this.animation) {\r\n            assert(false, 'isAnimating has to be true');\r\n            return;\r\n        }\r\n        const delta = computeDelta(detail.deltaX, this._isOpen, this.isEndSide);\r\n        const stepValue = delta / this.width;\r\n        this.animation.progressStep(stepValue);\r\n    }\r\n    onEnd(detail) {\r\n        if (!this.isAnimating || !this.animation) {\r\n            assert(false, 'isAnimating has to be true');\r\n            return;\r\n        }\r\n        const isOpen = this._isOpen;\r\n        const isEndSide$$1 = this.isEndSide;\r\n        const delta = computeDelta(detail.deltaX, isOpen, isEndSide$$1);\r\n        const width = this.width;\r\n        const stepValue = delta / width;\r\n        const velocity = detail.velocityX;\r\n        const z = width / 2.0;\r\n        const shouldCompleteRight = velocity >= 0 && (velocity > 0.2 || detail.deltaX > z);\r\n        const shouldCompleteLeft = velocity <= 0 && (velocity < -0.2 || detail.deltaX < -z);\r\n        const shouldComplete = isOpen\r\n            ? isEndSide$$1 ? shouldCompleteRight : shouldCompleteLeft\r\n            : isEndSide$$1 ? shouldCompleteLeft : shouldCompleteRight;\r\n        let shouldOpen = !isOpen && shouldComplete;\r\n        if (isOpen && !shouldComplete) {\r\n            shouldOpen = true;\r\n        }\r\n        const missing = shouldComplete ? 1 - stepValue : stepValue;\r\n        const missingDistance = missing * width;\r\n        let realDur = 0;\r\n        if (missingDistance > 5) {\r\n            const dur = missingDistance / Math.abs(velocity);\r\n            realDur = Math.min(dur, 300);\r\n        }\r\n        this.lastOnEnd = detail.timeStamp;\r\n        this.animation\r\n            .onFinish(() => this.afterAnimation(shouldOpen), {\r\n            clearExistingCallbacks: true,\r\n            oneTimeCallback: true\r\n        })\r\n            .progressEnd(shouldComplete, stepValue, realDur);\r\n    }\r\n    beforeAnimation(shouldOpen) {\r\n        assert(!this.isAnimating, '_before() should not be called while animating');\r\n        this.el.classList.add(SHOW_MENU);\r\n        if (this.backdropEl) {\r\n            this.backdropEl.classList.add(SHOW_BACKDROP);\r\n        }\r\n        this.blocker.block();\r\n        this.isAnimating = true;\r\n        if (shouldOpen) {\r\n            this.ionWillOpen.emit();\r\n        }\r\n        else {\r\n            this.ionWillClose.emit();\r\n        }\r\n    }\r\n    afterAnimation(isOpen) {\r\n        assert(this.isAnimating, '_before() should be called while animating');\r\n        this._isOpen = isOpen;\r\n        this.isAnimating = false;\r\n        if (!this._isOpen) {\r\n            this.blocker.unblock();\r\n        }\r\n        this.enableListener(this, 'click', isOpen);\r\n        if (isOpen) {\r\n            if (this.contentEl) {\r\n                this.contentEl.classList.add(MENU_CONTENT_OPEN);\r\n            }\r\n            this.ionDidOpen.emit();\r\n        }\r\n        else {\r\n            this.el.classList.remove(SHOW_MENU);\r\n            if (this.contentEl) {\r\n                this.contentEl.classList.remove(MENU_CONTENT_OPEN);\r\n            }\r\n            if (this.backdropEl) {\r\n                this.backdropEl.classList.remove(SHOW_BACKDROP);\r\n            }\r\n            this.ionDidClose.emit();\r\n        }\r\n    }\r\n    updateState() {\r\n        const isActive = this._isActive();\r\n        if (this.gesture) {\r\n            this.gesture.setDisabled(!isActive || !this.swipeGesture);\r\n        }\r\n        if (!isActive && this._isOpen) {\r\n            this.forceClosing();\r\n        }\r\n        if (!this.disabled && this.menuCtrl) {\r\n            this.menuCtrl._setActiveMenu(this);\r\n        }\r\n        assert(!this.isAnimating, 'can not be animating');\r\n    }\r\n    forceClosing() {\r\n        assert(this._isOpen, 'menu cannot be closed');\r\n        this.isAnimating = true;\r\n        const ani = this.animation.reverse(true);\r\n        ani.playSync();\r\n        this.afterAnimation(false);\r\n    }\r\n    hostData() {\r\n        const { isEndSide: isEndSide$$1, type, disabled, isPaneVisible } = this;\r\n        return {\r\n            role: 'complementary',\r\n            class: {\r\n                [`menu-type-${type}`]: true,\r\n                'menu-enabled': !disabled,\r\n                'menu-side-end': isEndSide$$1,\r\n                'menu-side-start': !isEndSide$$1,\r\n                'menu-pane-visible': isPaneVisible\r\n            }\r\n        };\r\n    }\r\n    render() {\r\n        return [\r\n            h(\"div\", { class: \"menu-inner\", ref: el => this.menuInnerEl = el },\r\n                h(\"slot\", null)),\r\n            h(\"ion-backdrop\", { ref: el => this.backdropEl = el, class: \"menu-backdrop\", tappable: false, stopPropagation: false })\r\n        ];\r\n    }\r\n    static get is() { return \"ion-menu\"; }\r\n    static get encapsulation() { return \"shadow\"; }\r\n    static get properties() { return {\r\n        \"close\": {\r\n            \"method\": true\r\n        },\r\n        \"config\": {\r\n            \"context\": \"config\"\r\n        },\r\n        \"contentId\": {\r\n            \"type\": String,\r\n            \"attr\": \"content-id\"\r\n        },\r\n        \"disabled\": {\r\n            \"type\": Boolean,\r\n            \"attr\": \"disabled\",\r\n            \"mutable\": true,\r\n            \"watchCallbacks\": [\"disabledChanged\"]\r\n        },\r\n        \"doc\": {\r\n            \"context\": \"document\"\r\n        },\r\n        \"el\": {\r\n            \"elementRef\": true\r\n        },\r\n        \"enableListener\": {\r\n            \"context\": \"enableListener\"\r\n        },\r\n        \"isActive\": {\r\n            \"method\": true\r\n        },\r\n        \"isEndSide\": {\r\n            \"state\": true\r\n        },\r\n        \"isOpen\": {\r\n            \"method\": true\r\n        },\r\n        \"isPaneVisible\": {\r\n            \"state\": true\r\n        },\r\n        \"isServer\": {\r\n            \"context\": \"isServer\"\r\n        },\r\n        \"lazyMenuCtrl\": {\r\n            \"connect\": \"ion-menu-controller\"\r\n        },\r\n        \"maxEdgeStart\": {\r\n            \"type\": Number,\r\n            \"attr\": \"max-edge-start\"\r\n        },\r\n        \"menuId\": {\r\n            \"type\": String,\r\n            \"attr\": \"menu-id\"\r\n        },\r\n        \"open\": {\r\n            \"method\": true\r\n        },\r\n        \"queue\": {\r\n            \"context\": \"queue\"\r\n        },\r\n        \"setOpen\": {\r\n            \"method\": true\r\n        },\r\n        \"side\": {\r\n            \"type\": String,\r\n            \"attr\": \"side\",\r\n            \"reflectToAttr\": true,\r\n            \"watchCallbacks\": [\"sideChanged\"]\r\n        },\r\n        \"swipeGesture\": {\r\n            \"type\": Boolean,\r\n            \"attr\": \"swipe-gesture\",\r\n            \"watchCallbacks\": [\"swipeGestureChanged\"]\r\n        },\r\n        \"toggle\": {\r\n            \"method\": true\r\n        },\r\n        \"type\": {\r\n            \"type\": String,\r\n            \"attr\": \"type\",\r\n            \"mutable\": true,\r\n            \"watchCallbacks\": [\"typeChanged\"]\r\n        },\r\n        \"win\": {\r\n            \"context\": \"window\"\r\n        }\r\n    }; }\r\n    static get events() { return [{\r\n            \"name\": \"ionWillOpen\",\r\n            \"method\": \"ionWillOpen\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true\r\n        }, {\r\n            \"name\": \"ionWillClose\",\r\n            \"method\": \"ionWillClose\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true\r\n        }, {\r\n            \"name\": \"ionDidOpen\",\r\n            \"method\": \"ionDidOpen\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true\r\n        }, {\r\n            \"name\": \"ionDidClose\",\r\n            \"method\": \"ionDidClose\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true\r\n        }, {\r\n            \"name\": \"ionMenuChange\",\r\n            \"method\": \"ionMenuChange\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true\r\n        }]; }\r\n    static get listeners() { return [{\r\n            \"name\": \"body:ionSplitPaneVisible\",\r\n            \"method\": \"onSplitPaneChanged\"\r\n        }, {\r\n            \"name\": \"click\",\r\n            \"method\": \"onBackdropClick\",\r\n            \"capture\": true,\r\n            \"disabled\": true\r\n        }]; }\r\n    static get style() { return \".sc-ion-menu-ios-h{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color,#fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}.show-menu.sc-ion-menu-ios-h{display:block}.menu-inner.sc-ion-menu-ios{left:0;right:auto;top:0;bottom:0;-webkit-transform:translate3d(-9999px,0,0);transform:translate3d(-9999px,0,0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}[dir=rtl].sc-ion-menu-ios-h   .menu-inner.sc-ion-menu-ios, [dir=rtl]   .sc-ion-menu-ios-h   .menu-inner.sc-ion-menu-ios{left:auto;right:0;-webkit-transform:translate3d(calc(-1 * -9999px),0,0);transform:translate3d(calc(-1 * -9999px),0,0)}.menu-side-start.sc-ion-menu-ios-h   .menu-inner.sc-ion-menu-ios{--ion-safe-area-right:0px;right:auto;left:0}.menu-side-end.sc-ion-menu-ios-h   .menu-inner.sc-ion-menu-ios{--ion-safe-area-left:0px;right:0;left:auto}ion-backdrop.sc-ion-menu-ios{display:none;opacity:.01;z-index:-1}\\@media (max-width:340px){.menu-inner.sc-ion-menu-ios{--width:264px}}.menu-type-reveal.sc-ion-menu-ios-h{z-index:0}.menu-type-reveal.show-menu.sc-ion-menu-ios-h   .menu-inner.sc-ion-menu-ios{-webkit-transform:translateZ(0);transform:translateZ(0)}.menu-type-overlay.sc-ion-menu-ios-h{z-index:80}.menu-type-overlay.sc-ion-menu-ios-h   .show-backdrop.sc-ion-menu-ios{display:block;cursor:pointer}.menu-pane-visible.sc-ion-menu-ios-h   .menu-inner.sc-ion-menu-ios{left:0;right:0;width:auto;-webkit-transform:none!important;transform:none!important;-webkit-box-shadow:none!important;box-shadow:none!important}.menu-pane-visible.sc-ion-menu-ios-h   ion-backdrop.sc-ion-menu-ios{display:hidden!important}.menu-type-push.sc-ion-menu-ios-h{z-index:80}.menu-type-push.sc-ion-menu-ios-h   .show-backdrop.sc-ion-menu-ios{display:block}\"; }\r\n    static get styleMode() { return \"ios\"; }\r\n}\r\nfunction computeDelta(deltaX, isOpen, isEndSide$$1) {\r\n    return Math.max(0, isOpen !== isEndSide$$1 ? -deltaX : deltaX);\r\n}\r\nfunction checkEdgeSide(win, posX, isEndSide$$1, maxEdgeStart) {\r\n    if (isEndSide$$1) {\r\n        return posX >= win.innerWidth - maxEdgeStart;\r\n    }\r\n    else {\r\n        return posX <= maxEdgeStart;\r\n    }\r\n}\r\nconst SHOW_MENU = 'show-menu';\r\nconst SHOW_BACKDROP = 'show-backdrop';\r\nconst MENU_CONTENT_OPEN = 'menu-content-open';\n\nclass MenuButton {\r\n    constructor() {\r\n        this.autoHide = true;\r\n    }\r\n    hostData() {\r\n        return {\r\n            class: {\r\n                'button': true,\r\n                'ion-activatable': true,\r\n            }\r\n        };\r\n    }\r\n    render() {\r\n        const menuIcon = this.config.get('menuIcon', 'menu');\r\n        return (h(\"ion-menu-toggle\", { menu: this.menu, autoHide: this.autoHide },\r\n            h(\"button\", { type: \"button\" },\r\n                h(\"slot\", null,\r\n                    h(\"ion-icon\", { icon: menuIcon, mode: this.mode, color: this.color, lazy: false })),\r\n                this.mode === 'md' && h(\"ion-ripple-effect\", { type: \"unbounded\" }))));\r\n    }\r\n    static get is() { return \"ion-menu-button\"; }\r\n    static get encapsulation() { return \"shadow\"; }\r\n    static get properties() { return {\r\n        \"autoHide\": {\r\n            \"type\": Boolean,\r\n            \"attr\": \"auto-hide\"\r\n        },\r\n        \"color\": {\r\n            \"type\": String,\r\n            \"attr\": \"color\"\r\n        },\r\n        \"config\": {\r\n            \"context\": \"config\"\r\n        },\r\n        \"menu\": {\r\n            \"type\": String,\r\n            \"attr\": \"menu\"\r\n        },\r\n        \"mode\": {\r\n            \"type\": String,\r\n            \"attr\": \"mode\"\r\n        }\r\n    }; }\r\n    static get style() { return \".sc-ion-menu-button-ios-h{color:var(--color);text-align:center;text-decoration:none;text-overflow:ellipsis;text-transform:none;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none}button.sc-ion-menu-button-ios{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;height:32px;border:0;outline:none;background:transparent;line-height:1;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}button.sc-ion-menu-button-ios, ion-icon.sc-ion-menu-button-ios{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0}ion-icon.sc-ion-menu-button-ios{padding-top:0;padding-bottom:0;pointer-events:none}.ion-color.sc-ion-menu-button-ios-h   .button-native.sc-ion-menu-button-ios{color:var(--ion-color-base)}.sc-ion-menu-button-ios-h{--color:var(--ion-color-primary,#3880ff)}.activated.sc-ion-menu-button-ios-h{opacity:.4}button.sc-ion-menu-button-ios{padding-left:5px;padding-right:5px;padding-top:0;padding-bottom:0}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){button.sc-ion-menu-button-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:5px;padding-inline-start:5px;-webkit-padding-end:5px;padding-inline-end:5px}}ion-icon.sc-ion-menu-button-ios{font-size:31px}\"; }\r\n    static get styleMode() { return \"ios\"; }\r\n}\n\nfunction baseAnimation(AnimationC) {\r\n    return Promise.resolve(new AnimationC()\r\n        .easing('cubic-bezier(0.0, 0.0, 0.2, 1)')\r\n        .easingReverse('cubic-bezier(0.4, 0.0, 0.6, 1)')\r\n        .duration(300));\r\n}\n\nconst BOX_SHADOW_WIDTH = 8;\r\nfunction menuOverlayAnimation(AnimationC, _, menu) {\r\n    let closedX;\r\n    let openedX;\r\n    const width = menu.width + BOX_SHADOW_WIDTH;\r\n    if (menu.isEndSide) {\r\n        closedX = width + 'px';\r\n        openedX = '0px';\r\n    }\r\n    else {\r\n        closedX = -width + 'px';\r\n        openedX = '0px';\r\n    }\r\n    const menuAnimation = new AnimationC()\r\n        .addElement(menu.menuInnerEl)\r\n        .fromTo('translateX', closedX, openedX);\r\n    const backdropAnimation = new AnimationC()\r\n        .addElement(menu.backdropEl)\r\n        .fromTo('opacity', 0.01, 0.32);\r\n    return baseAnimation(AnimationC).then(animation => {\r\n        return animation.add(menuAnimation)\r\n            .add(backdropAnimation);\r\n    });\r\n}\n\nfunction menuPushAnimation(AnimationC, _, menu) {\r\n    let contentOpenedX;\r\n    let menuClosedX;\r\n    const width = menu.width;\r\n    if (menu.isEndSide) {\r\n        contentOpenedX = -width + 'px';\r\n        menuClosedX = width + 'px';\r\n    }\r\n    else {\r\n        contentOpenedX = width + 'px';\r\n        menuClosedX = -width + 'px';\r\n    }\r\n    const menuAnimation = new AnimationC()\r\n        .addElement(menu.menuInnerEl)\r\n        .fromTo('translateX', menuClosedX, '0px');\r\n    const contentAnimation = new AnimationC()\r\n        .addElement(menu.contentEl)\r\n        .fromTo('translateX', '0px', contentOpenedX);\r\n    const backdropAnimation = new AnimationC()\r\n        .addElement(menu.backdropEl)\r\n        .fromTo('opacity', 0.01, 0.32);\r\n    return baseAnimation(AnimationC).then(animation => {\r\n        return animation.add(menuAnimation)\r\n            .add(backdropAnimation)\r\n            .add(contentAnimation);\r\n    });\r\n}\n\nfunction menuRevealAnimation(AnimationC, _, menu) {\r\n    const openedX = (menu.width * (menu.isEndSide ? -1 : 1)) + 'px';\r\n    const contentOpen = new AnimationC()\r\n        .addElement(menu.contentEl)\r\n        .fromTo('translateX', '0px', openedX);\r\n    return baseAnimation(AnimationC).then(animation => {\r\n        return animation.add(contentOpen);\r\n    });\r\n}\n\nclass MenuController {\r\n    constructor() {\r\n        this.menus = [];\r\n        this.menuAnimations = new Map();\r\n        this.registerAnimation('reveal', menuRevealAnimation);\r\n        this.registerAnimation('push', menuPushAnimation);\r\n        this.registerAnimation('overlay', menuOverlayAnimation);\r\n    }\r\n    async open(menuId) {\r\n        const menu = await this.get(menuId);\r\n        if (menu) {\r\n            return menu.open();\r\n        }\r\n        return false;\r\n    }\r\n    async close(menuId) {\r\n        const menu = await (menuId !== undefined ? this.get(menuId) : this.getOpen());\r\n        if (menu !== undefined) {\r\n            return menu.close();\r\n        }\r\n        return false;\r\n    }\r\n    async toggle(menuId) {\r\n        const menu = await this.get(menuId);\r\n        if (menu) {\r\n            return menu.toggle();\r\n        }\r\n        return false;\r\n    }\r\n    async enable(shouldEnable, menuId) {\r\n        const menu = await this.get(menuId);\r\n        if (menu) {\r\n            menu.disabled = !shouldEnable;\r\n        }\r\n        return menu;\r\n    }\r\n    async swipeGesture(shouldEnable, menuId) {\r\n        const menu = await this.get(menuId);\r\n        if (menu) {\r\n            menu.swipeGesture = shouldEnable;\r\n        }\r\n        return menu;\r\n    }\r\n    async isOpen(menuId) {\r\n        if (menuId != null) {\r\n            const menu = await this.get(menuId);\r\n            return (menu !== undefined && menu.isOpen());\r\n        }\r\n        else {\r\n            const menu = await this.getOpen();\r\n            return menu !== undefined;\r\n        }\r\n    }\r\n    async isEnabled(menuId) {\r\n        const menu = await this.get(menuId);\r\n        if (menu) {\r\n            return !menu.disabled;\r\n        }\r\n        return false;\r\n    }\r\n    async get(menuId) {\r\n        await this.waitUntilReady();\r\n        if (menuId === 'start' || menuId === 'end') {\r\n            const menuRef = this.find(m => m.side === menuId && !m.disabled);\r\n            if (menuRef) {\r\n                return menuRef;\r\n            }\r\n            return this.find(m => m.side === menuId);\r\n        }\r\n        else if (menuId != null) {\r\n            return this.find(m => m.menuId === menuId);\r\n        }\r\n        const menu = this.find(m => !m.disabled);\r\n        if (menu) {\r\n            return menu;\r\n        }\r\n        return this.menus.length > 0 ? this.menus[0].el : undefined;\r\n    }\r\n    async getOpen() {\r\n        await this.waitUntilReady();\r\n        return this.getOpenSync();\r\n    }\r\n    async getMenus() {\r\n        await this.waitUntilReady();\r\n        return this.getMenusSync();\r\n    }\r\n    async isAnimating() {\r\n        await this.waitUntilReady();\r\n        return this.isAnimatingSync();\r\n    }\r\n    registerAnimation(name, animation) {\r\n        this.menuAnimations.set(name, animation);\r\n    }\r\n    _getInstance() {\r\n        return Promise.resolve(this);\r\n    }\r\n    _register(menu) {\r\n        const menus = this.menus;\r\n        if (menus.indexOf(menu) < 0) {\r\n            if (!menu.disabled) {\r\n                this._setActiveMenu(menu);\r\n            }\r\n            menus.push(menu);\r\n        }\r\n    }\r\n    _unregister(menu) {\r\n        const index = this.menus.indexOf(menu);\r\n        if (index > -1) {\r\n            this.menus.splice(index, 1);\r\n        }\r\n    }\r\n    _setActiveMenu(menu) {\r\n        const side = menu.side;\r\n        this.menus\r\n            .filter(m => m.side === side && m !== menu)\r\n            .forEach(m => m.disabled = true);\r\n    }\r\n    async _setOpen(menu, shouldOpen, animated) {\r\n        if (this.isAnimatingSync()) {\r\n            return false;\r\n        }\r\n        if (shouldOpen) {\r\n            const openedMenu = await this.getOpen();\r\n            if (openedMenu && menu.el !== openedMenu) {\r\n                await openedMenu.setOpen(false, false);\r\n            }\r\n        }\r\n        return menu._setOpen(shouldOpen, animated);\r\n    }\r\n    async _createAnimation(type, menuCmp) {\r\n        const animationBuilder = this.menuAnimations.get(type);\r\n        if (!animationBuilder) {\r\n            throw new Error('animation not registered');\r\n        }\r\n        const animation = await import('./chunk-816d48a8.js')\r\n            .then(mod => mod.create(animationBuilder, null, menuCmp));\r\n        if (!this.config.getBoolean('animated', true)) {\r\n            animation.duration(0);\r\n        }\r\n        return animation;\r\n    }\r\n    getOpenSync() {\r\n        return this.find(m => m._isOpen);\r\n    }\r\n    getMenusSync() {\r\n        return this.menus.map(menu => menu.el);\r\n    }\r\n    isAnimatingSync() {\r\n        return this.menus.some(menu => menu.isAnimating);\r\n    }\r\n    find(predicate) {\r\n        const instance = this.menus.find(predicate);\r\n        if (instance !== undefined) {\r\n            return instance.el;\r\n        }\r\n        return undefined;\r\n    }\r\n    waitUntilReady() {\r\n        return Promise.all(Array.from(this.doc.querySelectorAll('ion-menu'))\r\n            .map(menu => menu.componentOnReady()));\r\n    }\r\n    static get is() { return \"ion-menu-controller\"; }\r\n    static get properties() { return {\r\n        \"_getInstance\": {\r\n            \"method\": true\r\n        },\r\n        \"close\": {\r\n            \"method\": true\r\n        },\r\n        \"config\": {\r\n            \"context\": \"config\"\r\n        },\r\n        \"doc\": {\r\n            \"context\": \"document\"\r\n        },\r\n        \"enable\": {\r\n            \"method\": true\r\n        },\r\n        \"get\": {\r\n            \"method\": true\r\n        },\r\n        \"getMenus\": {\r\n            \"method\": true\r\n        },\r\n        \"getOpen\": {\r\n            \"method\": true\r\n        },\r\n        \"isAnimating\": {\r\n            \"method\": true\r\n        },\r\n        \"isEnabled\": {\r\n            \"method\": true\r\n        },\r\n        \"isOpen\": {\r\n            \"method\": true\r\n        },\r\n        \"open\": {\r\n            \"method\": true\r\n        },\r\n        \"registerAnimation\": {\r\n            \"method\": true\r\n        },\r\n        \"swipeGesture\": {\r\n            \"method\": true\r\n        },\r\n        \"toggle\": {\r\n            \"method\": true\r\n        }\r\n    }; }\r\n    static get style() { return \".menu-content{-webkit-transform:translateZ(0);transform:translateZ(0)}.menu-content-open{cursor:pointer;-ms-touch-action:manipulation;touch-action:manipulation;pointer-events:none}.ios .menu-content-reveal{-webkit-box-shadow:-8px 0 42px rgba(0,0,0,.08);box-shadow:-8px 0 42px rgba(0,0,0,.08)}[dir=rtl].ios .menu-content-reveal{-webkit-box-shadow:8px 0 42px rgba(0,0,0,.08);box-shadow:8px 0 42px rgba(0,0,0,.08)}.md .menu-content-push,.md .menu-content-reveal{-webkit-box-shadow:0 2px 22px 0 rgba(0,0,0,.09),4px 0 16px 0 rgba(0,0,0,.18);box-shadow:0 2px 22px 0 rgba(0,0,0,.09),4px 0 16px 0 rgba(0,0,0,.18)}\"; }\r\n}\n\nclass MenuToggle {\r\n    constructor() {\r\n        this.visible = false;\r\n        this.autoHide = true;\r\n    }\r\n    componentDidLoad() {\r\n        return this.updateVisibility();\r\n    }\r\n    async onClick() {\r\n        const menuCtrl = await getMenuController(this.doc);\r\n        if (menuCtrl) {\r\n            const menu = await menuCtrl.get(this.menu);\r\n            if (menu) {\r\n                menuCtrl.toggle(this.menu);\r\n            }\r\n        }\r\n    }\r\n    async updateVisibility() {\r\n        const menuCtrl = await getMenuController(this.doc);\r\n        if (menuCtrl) {\r\n            const menu = await menuCtrl.get(this.menu);\r\n            if (menu && await menu.isActive()) {\r\n                this.visible = true;\r\n                return;\r\n            }\r\n        }\r\n        this.visible = false;\r\n    }\r\n    hostData() {\r\n        const hidden = this.autoHide && !this.visible;\r\n        return {\r\n            'aria-hidden': hidden ? 'true' : null,\r\n            class: {\r\n                'menu-toggle-hidden': hidden,\r\n            }\r\n        };\r\n    }\r\n    render() {\r\n        return h(\"slot\", null);\r\n    }\r\n    static get is() { return \"ion-menu-toggle\"; }\r\n    static get encapsulation() { return \"shadow\"; }\r\n    static get properties() { return {\r\n        \"autoHide\": {\r\n            \"type\": Boolean,\r\n            \"attr\": \"auto-hide\"\r\n        },\r\n        \"doc\": {\r\n            \"context\": \"document\"\r\n        },\r\n        \"menu\": {\r\n            \"type\": String,\r\n            \"attr\": \"menu\"\r\n        },\r\n        \"visible\": {\r\n            \"state\": true\r\n        }\r\n    }; }\r\n    static get listeners() { return [{\r\n            \"name\": \"click\",\r\n            \"method\": \"onClick\"\r\n        }, {\r\n            \"name\": \"body:ionMenuChange\",\r\n            \"method\": \"updateVisibility\"\r\n        }, {\r\n            \"name\": \"body:ionSplitPaneVisible\",\r\n            \"method\": \"updateVisibility\"\r\n        }]; }\r\n    static get style() { return \".menu-toggle-hidden.sc-ion-menu-toggle-h{display:none}\"; }\r\n}\r\nfunction getMenuController(doc) {\r\n    const menuControllerElement = doc.querySelector('ion-menu-controller');\r\n    if (!menuControllerElement) {\r\n        return Promise.resolve(undefined);\r\n    }\r\n    return menuControllerElement.componentOnReady();\r\n}\n\nexport { Menu as IonMenu, MenuButton as IonMenuButton, MenuController as IonMenuController, MenuToggle as IonMenuToggle };\n"],"sourceRoot":""}