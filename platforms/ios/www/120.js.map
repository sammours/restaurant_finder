{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm/es2017/build/tg1vwd7z.sc.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;;AAEiF;;AAEtH;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAAC;AACjB,YAAY,wDAAC,cAAc,sDAAsD;AACjF;AACA,qBAAqB,sBAAsB;AAC3C,gCAAgC,iBAAiB;AACjD,4BAA4B;AAC5B;AACA;AACA;AACA,SAAS,EAAE;AACX,wBAAwB,oCAAoC,aAAa,cAAc,YAAY,gCAAgC,cAAc,eAAe,eAAe,WAAW,EAAE;AAC5L,4BAA4B,aAAa;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,6NAA6B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAsB;AAClC;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,QAAQ,4DAAkB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA,sCAAsC,YAAY;AAClD;AACA;AACA,sCAAsC,WAAW;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,4BAA4B;AACjD,6BAA6B;AAC7B;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,MAAM;AACN,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS,EAAE;AACX,wBAAwB,gCAAgC,yCAAyC,iCAAiC,yBAAyB,+CAA+C,sBAAsB,iBAAiB,yBAAyB,sBAAsB,qBAAqB,iBAAiB,6BAA6B,cAAc,oBAAoB,YAAY,mBAAmB,sBAAsB,kBAAkB,gDAAgD,wBAAwB,gBAAgB,kBAAkB,kBAAkB,kCAAkC,0BAA0B,2CAA2C,mCAAmC,WAAW,YAAY,2CAA2C,gCAAgC,wBAAwB,EAAE;AAC90B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEkE","file":"120.js","sourcesContent":["import { h } from '../ionic.core.js';\n\nimport { b as hapticSelectionStart, a as hapticSelectionChanged, c as hapticSelectionEnd } from './chunk-81780b86.js';\n\nclass Reorder {\r\n    onClick(ev) {\r\n        ev.preventDefault();\r\n        ev.stopImmediatePropagation();\r\n    }\r\n    render() {\r\n        return (h(\"slot\", null,\r\n            h(\"ion-icon\", { name: \"reorder\", lazy: false, class: \"reorder-icon\" })));\r\n    }\r\n    static get is() { return \"ion-reorder\"; }\r\n    static get encapsulation() { return \"shadow\"; }\r\n    static get listeners() { return [{\r\n            \"name\": \"click\",\r\n            \"method\": \"onClick\",\r\n            \"capture\": true\r\n        }]; }\r\n    static get style() { return \"[slot].sc-ion-reorder-md-h{display:none;line-height:0;z-index:100}.reorder-icon.sc-ion-reorder-md{display:block;font-size:22px;font-size:31px;opacity:.3}\"; }\r\n    static get styleMode() { return \"md\"; }\r\n}\n\nclass ReorderGroup {\r\n    constructor() {\r\n        this.lastToIndex = -1;\r\n        this.cachedHeights = [];\r\n        this.scrollElTop = 0;\r\n        this.scrollElBottom = 0;\r\n        this.scrollElInitial = 0;\r\n        this.containerTop = 0;\r\n        this.containerBottom = 0;\r\n        this.state = 0;\r\n        this.disabled = true;\r\n    }\r\n    disabledChanged() {\r\n        if (this.gesture) {\r\n            this.gesture.setDisabled(this.disabled);\r\n        }\r\n    }\r\n    async componentDidLoad() {\r\n        const contentEl = this.el.closest('ion-content');\r\n        if (contentEl) {\r\n            await contentEl.componentOnReady();\r\n            this.scrollEl = await contentEl.getScrollElement();\r\n        }\r\n        this.gesture = (await import('./chunk-f56eaea8.js')).createGesture({\r\n            el: this.el,\r\n            queue: this.queue,\r\n            gestureName: 'reorder',\r\n            gesturePriority: 110,\r\n            threshold: 0,\r\n            direction: 'y',\r\n            passive: false,\r\n            canStart: detail => this.canStart(detail),\r\n            onStart: ev => this.onStart(ev),\r\n            onMove: ev => this.onMove(ev),\r\n            onEnd: () => this.onEnd(),\r\n        });\r\n        this.disabledChanged();\r\n    }\r\n    componentDidUnload() {\r\n        this.onEnd();\r\n        if (this.gesture) {\r\n            this.gesture.destroy();\r\n            this.gesture = undefined;\r\n        }\r\n    }\r\n    complete(listOrReorder) {\r\n        return Promise.resolve(this.completeSync(listOrReorder));\r\n    }\r\n    canStart(ev) {\r\n        if (this.selectedItemEl || this.state !== 0) {\r\n            return false;\r\n        }\r\n        const target = ev.event.target;\r\n        const reorderEl = target.closest('ion-reorder');\r\n        if (!reorderEl) {\r\n            return false;\r\n        }\r\n        const item = findReorderItem(reorderEl, this.el);\r\n        if (!item) {\r\n            return false;\r\n        }\r\n        ev.data = item;\r\n        return true;\r\n    }\r\n    onStart(ev) {\r\n        ev.event.preventDefault();\r\n        const item = this.selectedItemEl = ev.data;\r\n        const heights = this.cachedHeights;\r\n        heights.length = 0;\r\n        const el = this.el;\r\n        const children = el.children;\r\n        if (!children || children.length === 0) {\r\n            return;\r\n        }\r\n        let sum = 0;\r\n        for (let i = 0; i < children.length; i++) {\r\n            const child = children[i];\r\n            sum += child.offsetHeight;\r\n            heights.push(sum);\r\n            child.$ionIndex = i;\r\n        }\r\n        const box = el.getBoundingClientRect();\r\n        this.containerTop = box.top;\r\n        this.containerBottom = box.bottom;\r\n        if (this.scrollEl) {\r\n            const scrollBox = this.scrollEl.getBoundingClientRect();\r\n            this.scrollElInitial = this.scrollEl.scrollTop;\r\n            this.scrollElTop = scrollBox.top + AUTO_SCROLL_MARGIN;\r\n            this.scrollElBottom = scrollBox.bottom - AUTO_SCROLL_MARGIN;\r\n        }\r\n        else {\r\n            this.scrollElInitial = 0;\r\n            this.scrollElTop = 0;\r\n            this.scrollElBottom = 0;\r\n        }\r\n        this.lastToIndex = indexForItem(item);\r\n        this.selectedItemHeight = item.offsetHeight;\r\n        this.state = 1;\r\n        item.classList.add(ITEM_REORDER_SELECTED);\r\n        hapticSelectionStart();\r\n    }\r\n    onMove(ev) {\r\n        const selectedItem = this.selectedItemEl;\r\n        if (!selectedItem) {\r\n            return;\r\n        }\r\n        const scroll = this.autoscroll(ev.currentY);\r\n        const top = this.containerTop - scroll;\r\n        const bottom = this.containerBottom - scroll;\r\n        const currentY = Math.max(top, Math.min(ev.currentY, bottom));\r\n        const deltaY = scroll + currentY - ev.startY;\r\n        const normalizedY = currentY - top;\r\n        const toIndex = this.itemIndexForTop(normalizedY);\r\n        if (toIndex !== this.lastToIndex) {\r\n            const fromIndex = indexForItem(selectedItem);\r\n            this.lastToIndex = toIndex;\r\n            hapticSelectionChanged();\r\n            this.reorderMove(fromIndex, toIndex);\r\n        }\r\n        selectedItem.style.transform = `translateY(${deltaY}px)`;\r\n    }\r\n    onEnd() {\r\n        const selectedItem = this.selectedItemEl;\r\n        this.state = 2;\r\n        if (!selectedItem) {\r\n            this.state = 0;\r\n            return;\r\n        }\r\n        const toIndex = this.lastToIndex;\r\n        const fromIndex = indexForItem(selectedItem);\r\n        if (toIndex === fromIndex) {\r\n            selectedItem.style.transition = 'transform 200ms ease-in-out';\r\n            setTimeout(() => this.completeSync(), 200);\r\n        }\r\n        else {\r\n            this.ionItemReorder.emit({\r\n                from: fromIndex,\r\n                to: toIndex,\r\n                complete: this.completeSync.bind(this)\r\n            });\r\n        }\r\n        hapticSelectionEnd();\r\n    }\r\n    completeSync(listOrReorder) {\r\n        const selectedItemEl = this.selectedItemEl;\r\n        if (selectedItemEl && this.state === 2) {\r\n            const children = this.el.children;\r\n            const len = children.length;\r\n            const toIndex = this.lastToIndex;\r\n            const fromIndex = indexForItem(selectedItemEl);\r\n            if (listOrReorder === true) {\r\n                const ref = (fromIndex < toIndex)\r\n                    ? children[toIndex + 1]\r\n                    : children[toIndex];\r\n                this.el.insertBefore(selectedItemEl, ref);\r\n            }\r\n            if (Array.isArray(listOrReorder)) {\r\n                listOrReorder = reorderArray(listOrReorder, fromIndex, toIndex);\r\n            }\r\n            for (let i = 0; i < len; i++) {\r\n                children[i].style['transform'] = '';\r\n            }\r\n            selectedItemEl.style.transition = '';\r\n            selectedItemEl.classList.remove(ITEM_REORDER_SELECTED);\r\n            this.selectedItemEl = undefined;\r\n            this.state = 0;\r\n        }\r\n        return listOrReorder;\r\n    }\r\n    itemIndexForTop(deltaY) {\r\n        const heights = this.cachedHeights;\r\n        let i = 0;\r\n        for (i = 0; i < heights.length; i++) {\r\n            if (heights[i] > deltaY) {\r\n                break;\r\n            }\r\n        }\r\n        return i;\r\n    }\r\n    reorderMove(fromIndex, toIndex) {\r\n        const itemHeight = this.selectedItemHeight;\r\n        const children = this.el.children;\r\n        for (let i = 0; i < children.length; i++) {\r\n            const style = children[i].style;\r\n            let value = '';\r\n            if (i > fromIndex && i <= toIndex) {\r\n                value = `translateY(${-itemHeight}px)`;\r\n            }\r\n            else if (i < fromIndex && i >= toIndex) {\r\n                value = `translateY(${itemHeight}px)`;\r\n            }\r\n            style['transform'] = value;\r\n        }\r\n    }\r\n    autoscroll(posY) {\r\n        if (!this.scrollEl) {\r\n            return 0;\r\n        }\r\n        let amount = 0;\r\n        if (posY < this.scrollElTop) {\r\n            amount = -SCROLL_JUMP;\r\n        }\r\n        else if (posY > this.scrollElBottom) {\r\n            amount = SCROLL_JUMP;\r\n        }\r\n        if (amount !== 0) {\r\n            this.scrollEl.scrollBy(0, amount);\r\n        }\r\n        return this.scrollEl.scrollTop - this.scrollElInitial;\r\n    }\r\n    hostData() {\r\n        return {\r\n            class: {\r\n                'reorder-enabled': !this.disabled,\r\n                'reorder-list-active': this.state !== 0,\r\n            }\r\n        };\r\n    }\r\n    static get is() { return \"ion-reorder-group\"; }\r\n    static get properties() { return {\r\n        \"complete\": {\r\n            \"method\": true\r\n        },\r\n        \"disabled\": {\r\n            \"type\": Boolean,\r\n            \"attr\": \"disabled\",\r\n            \"watchCallbacks\": [\"disabledChanged\"]\r\n        },\r\n        \"doc\": {\r\n            \"context\": \"document\"\r\n        },\r\n        \"el\": {\r\n            \"elementRef\": true\r\n        },\r\n        \"queue\": {\r\n            \"context\": \"queue\"\r\n        },\r\n        \"state\": {\r\n            \"state\": true\r\n        }\r\n    }; }\r\n    static get events() { return [{\r\n            \"name\": \"ionItemReorder\",\r\n            \"method\": \"ionItemReorder\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true\r\n        }]; }\r\n    static get style() { return \".reorder-list-active>*{-webkit-transition:-webkit-transform .3s;transition:-webkit-transform .3s;transition:transform .3s;transition:transform .3s,-webkit-transform .3s;will-change:transform}.reorder-enabled{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.reorder-enabled ion-reorder{display:block;cursor:-webkit-grab;cursor:grab;pointer-events:all;-ms-touch-action:none;touch-action:none}.reorder-selected,.reorder-selected ion-reorder{cursor:-webkit-grabbing;cursor:grabbing}.reorder-selected{position:relative;-webkit-transition:none!important;transition:none!important;-webkit-box-shadow:0 0 10px rgba(0,0,0,.4);box-shadow:0 0 10px rgba(0,0,0,.4);opacity:.8;z-index:100}.reorder-visible ion-reorder .reorder-icon{-webkit-transform:translateZ(0);transform:translateZ(0)}\"; }\r\n}\r\nfunction indexForItem(element) {\r\n    return element['$ionIndex'];\r\n}\r\nfunction findReorderItem(node, container) {\r\n    let parent;\r\n    while (node) {\r\n        parent = node.parentElement;\r\n        if (parent === container) {\r\n            return node;\r\n        }\r\n        node = parent;\r\n    }\r\n    return undefined;\r\n}\r\nconst AUTO_SCROLL_MARGIN = 60;\r\nconst SCROLL_JUMP = 10;\r\nconst ITEM_REORDER_SELECTED = 'reorder-selected';\r\nfunction reorderArray(array, from, to) {\r\n    const element = array[from];\r\n    array.splice(from, 1);\r\n    array.splice(to, 0, element);\r\n    return array.slice();\r\n}\n\nexport { Reorder as IonReorder, ReorderGroup as IonReorderGroup };\n"],"sourceRoot":""}