{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm/es2017/build/pubwd8xa.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;;AAE0B;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,6NAA6B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,EAAE;AAC7D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,mCAAmC,EAAE,4DAAmB,2BAA2B,mPAAmP;AACtU;AACA;AACA,qBAAqB,wBAAwB;AAC7C,6BAA6B;AAC7B;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,MAAM;AACN,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS,EAAE;AACX,wBAAwB,uBAAuB,OAAO,MAAM,aAAa,kBAAkB,WAAW,YAAY,WAAW,uCAAuC,QAAQ,+BAA+B,cAAc,sBAAsB,oBAAoB,aAAa,0BAA0B,sBAAsB,qBAAqB,uBAAuB,YAAY,yCAAyC,aAAa,WAAW,mDAAmD,gCAAgC,wBAAwB,uBAAuB,eAAe,eAAe,kBAAkB,qGAAqG,6CAA6C,qCAAqC,mDAAmD,eAAe,kBAAkB,sHAAsH,cAAc,+DAA+D,iCAAiC,yBAAyB,iIAAiI,cAAc,oEAAoE,2BAA2B,mBAAmB,kEAAkE,cAAc,uEAAuE,2BAA2B,mBAAmB,kKAAkK,iCAAiC,8LAA8L,kCAAkC,oLAAoL,gCAAgC,EAAE;AAClrE,4BAA4B,cAAc;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wDAAC,SAAS,6BAA6B;AACnD;AACA,oBAAoB,wDAAC,SAAS,kCAAkC;AAChE,wBAAwB,wDAAC,cAAc,sCAAsC;AAC7E;AACA,oBAAoB,wDAAC,SAAS,+DAA+D;AAC7F,YAAY,wDAAC,SAAS,gCAAgC;AACtD;AACA,oBAAoB,wDAAC,SAAS,qCAAqC;AACnE,wBAAwB,wDAAC,iBAAiB,+BAA+B;AACzE;AACA,oBAAoB,wDAAC,SAAS,qEAAqE;AACnG;AACA;AACA,qBAAqB,gCAAgC;AACrD,6BAA6B;AAC7B;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,MAAM;AACN;;AAE8E","file":"103.js","sourcesContent":["import { h } from '../ionic.core.js';\n\nimport { e as createThemedClasses } from './chunk-7c632336.js';\n\nclass Refresher {\r\n    constructor() {\r\n        this.appliedStyles = false;\r\n        this.didStart = false;\r\n        this.progress = 0;\r\n        this.state = 1;\r\n        this.pullMin = 60;\r\n        this.pullMax = this.pullMin + 60;\r\n        this.closeDuration = '280ms';\r\n        this.snapbackDuration = '280ms';\r\n        this.disabled = false;\r\n    }\r\n    disabledChanged() {\r\n        if (this.gesture) {\r\n            this.gesture.setDisabled(this.disabled);\r\n        }\r\n    }\r\n    async componentDidLoad() {\r\n        if (this.el.getAttribute('slot') !== 'fixed') {\r\n            console.error('Make sure you use: <ion-refresher slot=\"fixed\">');\r\n            return;\r\n        }\r\n        const contentEl = this.el.closest('ion-content');\r\n        if (contentEl) {\r\n            await contentEl.componentOnReady();\r\n            this.scrollEl = await contentEl.getScrollElement();\r\n        }\r\n        else {\r\n            console.error('ion-refresher did not attach, make sure the parent is an ion-content.');\r\n        }\r\n        this.gesture = (await import('./chunk-f56eaea8.js')).createGesture({\r\n            el: this.el.closest('ion-content'),\r\n            queue: this.queue,\r\n            gestureName: 'refresher',\r\n            gesturePriority: 10,\r\n            direction: 'y',\r\n            threshold: 20,\r\n            passive: false,\r\n            canStart: () => this.canStart(),\r\n            onStart: () => this.onStart(),\r\n            onMove: ev => this.onMove(ev),\r\n            onEnd: () => this.onEnd(),\r\n        });\r\n        this.disabledChanged();\r\n    }\r\n    componentDidUnload() {\r\n        this.scrollEl = undefined;\r\n        if (this.gesture) {\r\n            this.gesture.destroy();\r\n            this.gesture = undefined;\r\n        }\r\n    }\r\n    complete() {\r\n        this.close(32, '120ms');\r\n    }\r\n    cancel() {\r\n        this.close(16, '');\r\n    }\r\n    getProgress() {\r\n        return Promise.resolve(this.progress);\r\n    }\r\n    canStart() {\r\n        if (!this.scrollEl) {\r\n            return false;\r\n        }\r\n        if (this.state !== 1) {\r\n            return false;\r\n        }\r\n        if (this.scrollEl.scrollTop > 0) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    onStart() {\r\n        this.progress = 0;\r\n        this.state = 1;\r\n    }\r\n    onMove(detail) {\r\n        if (!this.scrollEl) {\r\n            return;\r\n        }\r\n        const ev = detail.event;\r\n        if (ev.touches && ev.touches.length > 1) {\r\n            return;\r\n        }\r\n        if ((this.state & 56) !== 0) {\r\n            return;\r\n        }\r\n        const deltaY = detail.deltaY;\r\n        if (deltaY <= 0) {\r\n            this.progress = 0;\r\n            this.state = 1;\r\n            if (this.appliedStyles) {\r\n                this.setCss(0, '', false, '');\r\n                return;\r\n            }\r\n            return;\r\n        }\r\n        if (this.state === 1) {\r\n            const scrollHostScrollTop = this.scrollEl.scrollTop;\r\n            if (scrollHostScrollTop > 0) {\r\n                this.progress = 0;\r\n                return;\r\n            }\r\n            this.state = 2;\r\n        }\r\n        if (ev.cancelable) {\r\n            ev.preventDefault();\r\n        }\r\n        this.setCss(deltaY, '0ms', true, '');\r\n        if (deltaY === 0) {\r\n            this.progress = 0;\r\n            return;\r\n        }\r\n        const pullMin = this.pullMin;\r\n        this.progress = deltaY / pullMin;\r\n        if (!this.didStart) {\r\n            this.didStart = true;\r\n            this.ionStart.emit();\r\n        }\r\n        this.ionPull.emit();\r\n        if (deltaY < pullMin) {\r\n            this.state = 2;\r\n            return;\r\n        }\r\n        if (deltaY > this.pullMax) {\r\n            this.beginRefresh();\r\n            return;\r\n        }\r\n        this.state = 4;\r\n        return;\r\n    }\r\n    onEnd() {\r\n        if (this.state === 4) {\r\n            this.beginRefresh();\r\n        }\r\n        else if (this.state === 2) {\r\n            this.cancel();\r\n        }\r\n    }\r\n    beginRefresh() {\r\n        this.state = 8;\r\n        this.setCss(this.pullMin, this.snapbackDuration, true, '');\r\n        this.ionRefresh.emit({\r\n            complete: this.complete.bind(this)\r\n        });\r\n    }\r\n    close(state, delay) {\r\n        setTimeout(() => {\r\n            this.state = 1;\r\n            this.progress = 0;\r\n            this.didStart = false;\r\n            this.setCss(0, '0ms', false, '');\r\n        }, 600);\r\n        this.state = state;\r\n        this.setCss(0, this.closeDuration, true, delay);\r\n    }\r\n    setCss(y, duration, overflowVisible, delay) {\r\n        this.appliedStyles = (y > 0);\r\n        this.queue.write(() => {\r\n            if (this.scrollEl) {\r\n                const style = this.scrollEl.style;\r\n                style.transform = ((y > 0) ? `translateY(${y}px) translateZ(0px)` : 'translateZ(0px)');\r\n                style.transitionDuration = duration;\r\n                style.transitionDelay = delay;\r\n                style.overflow = (overflowVisible ? 'hidden' : '');\r\n            }\r\n        });\r\n    }\r\n    hostData() {\r\n        return {\r\n            slot: 'fixed',\r\n            class: Object.assign({}, createThemedClasses(this.mode, 'refresher'), { 'refresher-active': this.state !== 1, 'refresher-pulling': this.state === 2, 'refresher-ready': this.state === 4, 'refresher-refreshing': this.state === 8, 'refresher-cancelling': this.state === 16, 'refresher-completing': this.state === 32 })\r\n        };\r\n    }\r\n    static get is() { return \"ion-refresher\"; }\r\n    static get properties() { return {\r\n        \"cancel\": {\r\n            \"method\": true\r\n        },\r\n        \"closeDuration\": {\r\n            \"type\": String,\r\n            \"attr\": \"close-duration\"\r\n        },\r\n        \"complete\": {\r\n            \"method\": true\r\n        },\r\n        \"disabled\": {\r\n            \"type\": Boolean,\r\n            \"attr\": \"disabled\",\r\n            \"watchCallbacks\": [\"disabledChanged\"]\r\n        },\r\n        \"el\": {\r\n            \"elementRef\": true\r\n        },\r\n        \"getProgress\": {\r\n            \"method\": true\r\n        },\r\n        \"pullMax\": {\r\n            \"type\": Number,\r\n            \"attr\": \"pull-max\"\r\n        },\r\n        \"pullMin\": {\r\n            \"type\": Number,\r\n            \"attr\": \"pull-min\"\r\n        },\r\n        \"queue\": {\r\n            \"context\": \"queue\"\r\n        },\r\n        \"snapbackDuration\": {\r\n            \"type\": String,\r\n            \"attr\": \"snapback-duration\"\r\n        },\r\n        \"state\": {\r\n            \"state\": true\r\n        }\r\n    }; }\r\n    static get events() { return [{\r\n            \"name\": \"ionRefresh\",\r\n            \"method\": \"ionRefresh\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true\r\n        }, {\r\n            \"name\": \"ionPull\",\r\n            \"method\": \"ionPull\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true\r\n        }, {\r\n            \"name\": \"ionStart\",\r\n            \"method\": \"ionStart\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true\r\n        }]; }\r\n    static get style() { return \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;z-index:-1}:host-context([dir=rtl]) ion-refresher{right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:.2s;transition:.2s;font-size:30px;text-align:center}:host-context([dir=rtl]) .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}.refresher-pulling ion-refresher-content .refresher-pulling,.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-cancelling ion-refresher-content .refresher-pulling,.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-ios .refresher-pulling-icon,.refresher-ios .refresher-pulling-text,.refresher-ios .refresher-refreshing-icon,.refresher-ios .refresher-refreshing-text{color:var(--ion-text-color,#000)}.refresher-ios .refresher-refreshing .spinner-crescent circle,.refresher-ios .refresher-refreshing .spinner-lines-ios line,.refresher-ios .refresher-refreshing .spinner-lines-small-ios line{stroke:var(--ion-text-color,#000)}.refresher-ios .refresher-refreshing .spinner-bubbles circle,.refresher-ios .refresher-refreshing .spinner-circles circle,.refresher-ios .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color,#000)}\"; }\r\n    static get styleMode() { return \"ios\"; }\r\n}\n\nclass RefresherContent {\r\n    componentWillLoad() {\r\n        if (this.pullingIcon === undefined) {\r\n            this.pullingIcon = this.config.get('refreshingIcon', 'arrow-down');\r\n        }\r\n        if (this.refreshingSpinner === undefined) {\r\n            this.refreshingSpinner = this.config.get('refreshingSpinner', this.config.get('spinner', this.mode === 'ios' ? 'lines' : 'crescent'));\r\n        }\r\n    }\r\n    render() {\r\n        return [\r\n            h(\"div\", { class: \"refresher-pulling\" },\r\n                this.pullingIcon &&\r\n                    h(\"div\", { class: \"refresher-pulling-icon\" },\r\n                        h(\"ion-icon\", { icon: this.pullingIcon, lazy: false })),\r\n                this.pullingText &&\r\n                    h(\"div\", { class: \"refresher-pulling-text\", innerHTML: this.pullingText })),\r\n            h(\"div\", { class: \"refresher-refreshing\" },\r\n                this.refreshingSpinner &&\r\n                    h(\"div\", { class: \"refresher-refreshing-icon\" },\r\n                        h(\"ion-spinner\", { name: this.refreshingSpinner })),\r\n                this.refreshingText &&\r\n                    h(\"div\", { class: \"refresher-refreshing-text\", innerHTML: this.refreshingText }))\r\n        ];\r\n    }\r\n    static get is() { return \"ion-refresher-content\"; }\r\n    static get properties() { return {\r\n        \"config\": {\r\n            \"context\": \"config\"\r\n        },\r\n        \"pullingIcon\": {\r\n            \"type\": String,\r\n            \"attr\": \"pulling-icon\",\r\n            \"mutable\": true\r\n        },\r\n        \"pullingText\": {\r\n            \"type\": String,\r\n            \"attr\": \"pulling-text\"\r\n        },\r\n        \"refreshingSpinner\": {\r\n            \"type\": String,\r\n            \"attr\": \"refreshing-spinner\",\r\n            \"mutable\": true\r\n        },\r\n        \"refreshingText\": {\r\n            \"type\": String,\r\n            \"attr\": \"refreshing-text\"\r\n        }\r\n    }; }\r\n}\n\nexport { Refresher as IonRefresher, RefresherContent as IonRefresherContent };\n"],"sourceRoot":""}