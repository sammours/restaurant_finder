{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm/es2017/build/o2g4txhh.sc.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAqC;;AAE0B;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE,4DAAmB,4BAA4B,qCAAqC;AACzH;AACA;AACA,qBAAqB,yBAAyB;AAC9C,6BAA6B;AAC7B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,MAAM;AACN,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS,EAAE;AACX,wBAAwB,qBAAqB,OAAO,QAAQ,MAAM,SAAS,oBAAoB,aAAa,kBAAkB,uBAAuB,mBAAmB,qBAAqB,iBAAiB,eAAe,0EAA0E,OAAO,QAAQ,MAAM,SAAS,kBAAkB,WAAW,OAAO,kCAAkC,0BAA0B,UAAU,6GAA6G,oBAAoB,aAAa,oBAAoB,cAAc,+BAA+B,aAAa,qCAAqC,kBAAkB,SAAS,+CAA+C,iBAAiB,QAAQ,gBAAgB,6GAA6G,oDAAoD,gBAAgB,cAAc,2BAA2B,cAAc,8DAA8D,gBAAgB,cAAc,eAAe,0BAA0B,EAAE;AAClpC,4BAA4B,cAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqC","file":"92.js","sourcesContent":["import { h } from '../ionic.core.js';\n\nimport { e as createThemedClasses } from './chunk-7c632336.js';\n\nconst SPLIT_PANE_MAIN = 'split-pane-main';\r\nconst SPLIT_PANE_SIDE = 'split-pane-side';\r\nconst QUERY = {\r\n    'xs': '(min-width: 0px)',\r\n    'sm': '(min-width: 576px)',\r\n    'md': '(min-width: 768px)',\r\n    'lg': '(min-width: 992px)',\r\n    'xl': '(min-width: 1200px)',\r\n    'never': ''\r\n};\r\nclass SplitPane {\r\n    constructor() {\r\n        this.visible = false;\r\n        this.disabled = false;\r\n        this.when = QUERY['lg'];\r\n    }\r\n    visibleChanged(visible) {\r\n        const detail = { visible, isPane: this.isPane.bind(this) };\r\n        this.ionSplitPaneVisible.emit(detail);\r\n    }\r\n    componentDidLoad() {\r\n        this.styleChildren();\r\n        this.updateState();\r\n    }\r\n    componentDidUnload() {\r\n        if (this.rmL) {\r\n            this.rmL();\r\n            this.rmL = undefined;\r\n        }\r\n    }\r\n    updateState() {\r\n        if (this.isServer) {\r\n            return;\r\n        }\r\n        if (this.rmL) {\r\n            this.rmL();\r\n            this.rmL = undefined;\r\n        }\r\n        if (this.disabled) {\r\n            this.visible = false;\r\n            return;\r\n        }\r\n        const query = this.when;\r\n        if (typeof query === 'boolean') {\r\n            this.visible = query;\r\n            return;\r\n        }\r\n        const mediaQuery = QUERY[query] || query;\r\n        if (mediaQuery.length === 0) {\r\n            this.visible = false;\r\n            return;\r\n        }\r\n        if (this.win.matchMedia) {\r\n            const callback = (q) => {\r\n                this.visible = q.matches;\r\n            };\r\n            const mediaList = this.win.matchMedia(mediaQuery);\r\n            mediaList.addListener(callback);\r\n            this.rmL = () => mediaList.removeListener(callback);\r\n            this.visible = mediaList.matches;\r\n        }\r\n    }\r\n    isPane(element) {\r\n        if (!this.visible) {\r\n            return false;\r\n        }\r\n        return element.parentElement === this.el\r\n            && element.classList.contains(SPLIT_PANE_SIDE);\r\n    }\r\n    styleChildren() {\r\n        if (this.isServer) {\r\n            return;\r\n        }\r\n        const contentId = this.contentId;\r\n        const children = this.el.children;\r\n        const nu = this.el.childElementCount;\r\n        let foundMain = false;\r\n        for (let i = 0; i < nu; i++) {\r\n            const child = children[i];\r\n            const isMain = contentId !== undefined ? child.id === contentId : child.hasAttribute('main');\r\n            if (isMain) {\r\n                if (foundMain) {\r\n                    console.warn('split pane cannot have more than one main node');\r\n                    return;\r\n                }\r\n                foundMain = true;\r\n            }\r\n            setPaneClass(child, isMain);\r\n        }\r\n        if (!foundMain) {\r\n            console.warn('split pane does not have a specified main node');\r\n        }\r\n    }\r\n    hostData() {\r\n        return {\r\n            class: Object.assign({}, createThemedClasses(this.mode, 'split-pane'), { 'split-pane-visible': this.visible })\r\n        };\r\n    }\r\n    static get is() { return \"ion-split-pane\"; }\r\n    static get properties() { return {\r\n        \"contentId\": {\r\n            \"type\": String,\r\n            \"attr\": \"content-id\"\r\n        },\r\n        \"disabled\": {\r\n            \"type\": Boolean,\r\n            \"attr\": \"disabled\",\r\n            \"watchCallbacks\": [\"updateState\"]\r\n        },\r\n        \"el\": {\r\n            \"elementRef\": true\r\n        },\r\n        \"isServer\": {\r\n            \"context\": \"isServer\"\r\n        },\r\n        \"visible\": {\r\n            \"state\": true,\r\n            \"watchCallbacks\": [\"visibleChanged\"]\r\n        },\r\n        \"when\": {\r\n            \"type\": \"Any\",\r\n            \"attr\": \"when\",\r\n            \"watchCallbacks\": [\"updateState\"]\r\n        },\r\n        \"win\": {\r\n            \"context\": \"window\"\r\n        }\r\n    }; }\r\n    static get events() { return [{\r\n            \"name\": \"ionSplitPaneVisible\",\r\n            \"method\": \"ionSplitPaneVisible\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true\r\n        }]; }\r\n    static get style() { return \".split-pane{left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}.split-pane-visible>.split-pane-main,.split-pane-visible>.split-pane-side{left:0;right:0;top:0;bottom:0;position:relative;-ms-flex:1;flex:1;-webkit-box-shadow:none!important;box-shadow:none!important;z-index:0}.split-pane-visible>.split-pane-side:not(ion-menu),.split-pane-visible>ion-menu.split-pane-side.menu-enabled{display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}.split-pane-side:not(ion-menu){display:none}.split-pane-visible>.split-pane-side{-ms-flex-order:-1;order:-1}.split-pane-visible>.split-pane-side[side=end]{-ms-flex-order:1;order:1}.split-pane-ios{--border:0.55px solid var(--ion-item-border-color,var(--ion-border-color,var(--ion-color-step-150,#c8c7cc)))}.split-pane-ios.split-pane-visible>.split-pane-side{min-width:270px;max-width:28%;border-right:var(--border);border-left:0}.split-pane-ios.split-pane-visible>.split-pane-side[side=end]{min-width:270px;max-width:28%;border-right:0;border-left:var(--border)}\"; }\r\n    static get styleMode() { return \"ios\"; }\r\n}\r\nfunction setPaneClass(el, isMain) {\r\n    let toAdd;\r\n    let toRemove;\r\n    if (isMain) {\r\n        toAdd = SPLIT_PANE_MAIN;\r\n        toRemove = SPLIT_PANE_SIDE;\r\n    }\r\n    else {\r\n        toAdd = SPLIT_PANE_SIDE;\r\n        toRemove = SPLIT_PANE_MAIN;\r\n    }\r\n    const classList = el.classList;\r\n    classList.add(toAdd);\r\n    classList.remove(toRemove);\r\n}\n\nexport { SplitPane as IonSplitPane };\n"],"sourceRoot":""}