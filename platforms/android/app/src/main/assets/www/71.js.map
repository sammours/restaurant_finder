{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm/es2017/build/jpkvsu5y.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;;AAEsB;;AAE3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAe;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yBAAyB;AACxC;AACA;AACA;AACA,6CAA6C,IAAI;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wDAAC;AAChB;AACA,qBAAqB,kBAAkB;AACvC,gCAAgC,iBAAiB;AACjD,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,MAAM;AACN,wBAAwB,4BAA4B,uBAAuB,EAAE;AAC7E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,MAAM;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,uCAAuC;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,uBAAuB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,uBAAuB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wDAAC,UAAU,cAAc;AACrC,YAAY,wDAAC,SAAS,sBAAsB;AAC5C,gBAAgB,wDAAC;AACjB,YAAY,wDAAC,UAAU,iBAAiB;AACxC;AACA;AACA,qBAAqB,mBAAmB;AACxC,gCAAgC,iBAAiB;AACjD,6BAA6B;AAC7B;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS,EAAE;AACX,4BAA4B;AAC5B;AACA;AACA,SAAS,EAAE;AACX,wBAAwB,eAAe,OAAO,QAAQ,MAAM,SAAS,oBAAoB,aAAa,kBAAkB,0BAA0B,sBAAsB,WAAW,YAAY,UAAU,kBAAkB,0BAA0B,YAAY,kBAAkB,WAAW,OAAO,EAAE;AACvS;;AAE0C","file":"71.js","sourcesContent":["import { h } from '../ionic.core.js';\n\nimport { a as attachComponent } from './chunk-99929188.js';\n\nclass Tab {\r\n    constructor() {\r\n        this.loaded = false;\r\n        this.active = false;\r\n    }\r\n    componentWillLoad() {\r\n    }\r\n    async setActive() {\r\n        await this.prepareLazyLoaded();\r\n        this.active = true;\r\n    }\r\n    async prepareLazyLoaded() {\r\n        if (!this.loaded && this.component != null) {\r\n            this.loaded = true;\r\n            try {\r\n                return attachComponent(this.delegate, this.el, this.component, ['ion-page']);\r\n            }\r\n            catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    hostData() {\r\n        const { tab, active, component } = this;\r\n        return {\r\n            'role': 'tabpanel',\r\n            'aria-hidden': !active ? 'true' : null,\r\n            'aria-labelledby': `tab-button-${tab}`,\r\n            'class': {\r\n                'ion-page': component === undefined,\r\n                'tab-hidden': !active\r\n            }\r\n        };\r\n    }\r\n    render() {\r\n        return h(\"slot\", null);\r\n    }\r\n    static get is() { return \"ion-tab\"; }\r\n    static get encapsulation() { return \"shadow\"; }\r\n    static get properties() { return {\r\n        \"active\": {\r\n            \"type\": Boolean,\r\n            \"attr\": \"active\",\r\n            \"mutable\": true\r\n        },\r\n        \"component\": {\r\n            \"type\": String,\r\n            \"attr\": \"component\"\r\n        },\r\n        \"delegate\": {\r\n            \"type\": \"Any\",\r\n            \"attr\": \"delegate\"\r\n        },\r\n        \"el\": {\r\n            \"elementRef\": true\r\n        },\r\n        \"setActive\": {\r\n            \"method\": true\r\n        },\r\n        \"tab\": {\r\n            \"type\": String,\r\n            \"attr\": \"tab\"\r\n        }\r\n    }; }\r\n    static get style() { return \":host(.tab-hidden){display:none!important}\"; }\r\n}\n\nclass Tabs {\r\n    constructor() {\r\n        this.transitioning = false;\r\n        this.tabs = [];\r\n        this.useRouter = false;\r\n    }\r\n    async componentWillLoad() {\r\n        if (!this.useRouter) {\r\n            this.useRouter = !!this.doc.querySelector('ion-router') && !this.el.closest('[no-router]');\r\n        }\r\n        this.tabs = Array.from(this.el.querySelectorAll('ion-tab'));\r\n        this.ionNavWillLoad.emit();\r\n        this.componentWillUpdate();\r\n    }\r\n    componentDidLoad() {\r\n        this.initSelect();\r\n    }\r\n    componentDidUnload() {\r\n        this.tabs.length = 0;\r\n        this.selectedTab = this.leavingTab = undefined;\r\n    }\r\n    componentWillUpdate() {\r\n        const tabBar = this.el.querySelector('ion-tab-bar');\r\n        if (tabBar) {\r\n            const tab = this.selectedTab ? this.selectedTab.tab : undefined;\r\n            tabBar.selectedTab = tab;\r\n        }\r\n    }\r\n    onTabClicked(ev) {\r\n        const { href, tab } = ev.detail;\r\n        const selectedTab = this.tabs.find(t => t.tab === tab);\r\n        if (this.useRouter && href !== undefined) {\r\n            const router = this.doc.querySelector('ion-router');\r\n            if (router) {\r\n                router.push(href);\r\n            }\r\n        }\r\n        else if (selectedTab) {\r\n            this.select(selectedTab);\r\n        }\r\n    }\r\n    async select(tab) {\r\n        const selectedTab = await this.getTab(tab);\r\n        if (!this.shouldSwitch(selectedTab)) {\r\n            return false;\r\n        }\r\n        await this.setActive(selectedTab);\r\n        await this.notifyRouter();\r\n        this.tabSwitch();\r\n        return true;\r\n    }\r\n    async getTab(tab) {\r\n        const tabEl = (typeof tab === 'string')\r\n            ? this.tabs.find(t => t.tab === tab)\r\n            : tab;\r\n        if (!tabEl) {\r\n            console.error(`tab with id: \"${tabEl}\" does not exist`);\r\n        }\r\n        return tabEl;\r\n    }\r\n    getSelected() {\r\n        return Promise.resolve(this.selectedTab ? this.selectedTab.tab : undefined);\r\n    }\r\n    async setRouteId(id) {\r\n        const selectedTab = await this.getTab(id);\r\n        if (!this.shouldSwitch(selectedTab)) {\r\n            return { changed: false, element: this.selectedTab };\r\n        }\r\n        await this.setActive(selectedTab);\r\n        return {\r\n            changed: true,\r\n            element: this.selectedTab,\r\n            markVisible: () => this.tabSwitch(),\r\n        };\r\n    }\r\n    async getRouteId() {\r\n        const tabId = this.selectedTab && this.selectedTab.tab;\r\n        return tabId !== undefined ? { id: tabId, element: this.selectedTab } : undefined;\r\n    }\r\n    async initSelect() {\r\n        if (this.useRouter) {\r\n            return;\r\n        }\r\n        await Promise.all(this.tabs.map(tab => tab.componentOnReady()));\r\n        await this.select(this.tabs[0]);\r\n    }\r\n    setActive(selectedTab) {\r\n        if (this.transitioning) {\r\n            return Promise.reject('transitioning already happening');\r\n        }\r\n        this.transitioning = true;\r\n        this.leavingTab = this.selectedTab;\r\n        this.selectedTab = selectedTab;\r\n        this.ionTabsWillChange.emit({ tab: selectedTab.tab });\r\n        return selectedTab.setActive();\r\n    }\r\n    tabSwitch() {\r\n        const selectedTab = this.selectedTab;\r\n        const leavingTab = this.leavingTab;\r\n        this.leavingTab = undefined;\r\n        this.transitioning = false;\r\n        if (!selectedTab) {\r\n            return;\r\n        }\r\n        if (leavingTab !== selectedTab) {\r\n            if (leavingTab) {\r\n                leavingTab.active = false;\r\n            }\r\n            this.ionTabsDidChange.emit({ tab: selectedTab.tab });\r\n        }\r\n    }\r\n    notifyRouter() {\r\n        if (this.useRouter) {\r\n            const router = this.doc.querySelector('ion-router');\r\n            if (router) {\r\n                return router.navChanged('forward');\r\n            }\r\n        }\r\n        return Promise.resolve(false);\r\n    }\r\n    shouldSwitch(selectedTab) {\r\n        const leavingTab = this.selectedTab;\r\n        return selectedTab !== undefined && selectedTab !== leavingTab && !this.transitioning;\r\n    }\r\n    render() {\r\n        return [\r\n            h(\"slot\", { name: \"top\" }),\r\n            h(\"div\", { class: \"tabs-inner\" },\r\n                h(\"slot\", null)),\r\n            h(\"slot\", { name: \"bottom\" })\r\n        ];\r\n    }\r\n    static get is() { return \"ion-tabs\"; }\r\n    static get encapsulation() { return \"shadow\"; }\r\n    static get properties() { return {\r\n        \"config\": {\r\n            \"context\": \"config\"\r\n        },\r\n        \"doc\": {\r\n            \"context\": \"document\"\r\n        },\r\n        \"el\": {\r\n            \"elementRef\": true\r\n        },\r\n        \"getRouteId\": {\r\n            \"method\": true\r\n        },\r\n        \"getSelected\": {\r\n            \"method\": true\r\n        },\r\n        \"getTab\": {\r\n            \"method\": true\r\n        },\r\n        \"select\": {\r\n            \"method\": true\r\n        },\r\n        \"selectedTab\": {\r\n            \"state\": true\r\n        },\r\n        \"setRouteId\": {\r\n            \"method\": true\r\n        },\r\n        \"tabs\": {\r\n            \"state\": true\r\n        },\r\n        \"useRouter\": {\r\n            \"type\": Boolean,\r\n            \"attr\": \"use-router\",\r\n            \"mutable\": true\r\n        }\r\n    }; }\r\n    static get events() { return [{\r\n            \"name\": \"ionNavWillLoad\",\r\n            \"method\": \"ionNavWillLoad\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true\r\n        }, {\r\n            \"name\": \"ionTabsWillChange\",\r\n            \"method\": \"ionTabsWillChange\",\r\n            \"bubbles\": false,\r\n            \"cancelable\": true,\r\n            \"composed\": true\r\n        }, {\r\n            \"name\": \"ionTabsDidChange\",\r\n            \"method\": \"ionTabsDidChange\",\r\n            \"bubbles\": false,\r\n            \"cancelable\": true,\r\n            \"composed\": true\r\n        }]; }\r\n    static get listeners() { return [{\r\n            \"name\": \"ionTabButtonClick\",\r\n            \"method\": \"onTabClicked\"\r\n        }]; }\r\n    static get style() { return \":host{left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;width:100%;height:100%;z-index:0}.tabs-inner,:host{contain:layout size style}.tabs-inner{position:relative;-ms-flex:1;flex:1}\"; }\r\n}\n\nexport { Tab as IonTab, Tabs as IonTabs };\n"],"sourceRoot":""}