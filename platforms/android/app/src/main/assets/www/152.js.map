{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm/es2017/build/xt9bb6qm.sc.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;;AAEkB;AAC0B;;AAEjF;AACA;AACA;AACA,kCAAkC,YAAY;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,gBAAgB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,2CAA2C,kBAAkB,qBAAqB;AAClF;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA,+CAA+C,kBAAkB,qBAAqB,uHAAuH;AAC7M;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,kBAAkB,qBAAqB;AAChF;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4DAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,sBAAsB,4DAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gBAAgB;AAChD;AACA;AACA;AACA,2BAA2B,4DAAW;AACtC;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAiB;AACzB;AACA,sBAAsB,4DAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wDAAC,SAAS,2BAA2B;AACjD,YAAY,wDAAC,SAAS,6CAA6C;AACnE,gBAAgB,wDAAC,SAAS,6BAA6B;AACvD,YAAY,wDAAC,YAAY,uHAAuH;AAChJ;AACA;AACA,qBAAqB,qBAAqB;AAC1C,gCAAgC,iBAAiB;AACjD,6BAA6B;AAC7B;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS,EAAE;AACX,4BAA4B;AAC5B;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS,EAAE;AACX,wBAAwB,6BAA6B,kCAAkC,iCAAiC,+BAA+B,qCAAqC,oBAAoB,aAAa,kBAAkB,2CAA2C,gBAAgB,UAAU,6FAA6F,oBAAoB,mBAAmB,oBAAoB,2CAA2C,0CAA0C,uCAAuC,uCAAuC,4BAA4B,gBAAgB,cAAc,oCAAoC,WAAW,oBAAoB,0DAA0D,yBAAyB,qCAAqC,mBAAmB,YAAY,wBAAwB,OAAO,MAAM,cAAc,eAAe,aAAa,gBAAgB,kBAAkB,WAAW,YAAY,SAAS,uBAAuB,eAAe,wBAAwB,qBAAqB,gBAAgB,aAAa,kHAAkH,QAAQ,0CAA0C,SAAS,8BAA8B,kBAAkB,8BAA8B,WAAW,OAAO,eAAe,kBAAkB,uBAAuB,mBAAmB,gBAAgB,oCAAoC,SAAS,QAAQ,gBAAgB,kBAAkB,QAAQ,SAAS,qBAAqB,mCAAmC,kCAAkC,mBAAmB,YAAY,oBAAoB,0IAA0I,UAAU,oBAAoB,mBAAmB,gBAAgB,sBAAsB,qBAAqB,8BAA8B,WAAW,YAAY,EAAE;AAC9gE,4BAA4B,aAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qCAAqC,kBAAkB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,4BAA4B;AACjD,gCAAgC,iBAAiB;AACjD,6BAA6B;AAC7B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS,EAAE;AACX,wBAAwB,iCAAiC,aAAa,EAAE;AACxE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAAC;AACjB,yCAAyC,wDAAC;AAC1C;AACA,gBAAgB,wDAAC;AACjB,oBAAoB,wDAAC,eAAe,oBAAoB;AACxD,wDAAwD,wDAAC;AACzD,sDAAsD,wDAAC;AACvD,YAAY,wDAAC,qDAAqD,wDAAC;AACnE,gBAAgB,wDAAC;AACjB,gBAAgB,wDAAC,eAAe,0EAA0E;AAC1G;AACA,qBAAqB,6BAA6B;AAClD,gCAAgC,iBAAiB;AACjD,6BAA6B;AAC7B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,MAAM;AACN,4BAA4B;AAC5B;AACA;AACA,SAAS,EAAE;AACX,wBAAwB,mEAAmE,cAAc,eAAe,gBAAgB,mBAAmB,6HAA6H,cAAc,eAAe,aAAa,gBAAgB,EAAE;AACpV;;AAEmG","file":"152.js","sourcesContent":["import { h } from '../ionic.core.js';\n\nimport { d as hostContext } from './chunk-7c632336.js';\nimport { d as findItemLabel, e as renderHiddenInput } from './chunk-6d7d2f8c.js';\n\nclass Select {\r\n    constructor() {\r\n        this.childOpts = [];\r\n        this.inputId = `ion-sel-${selectIds++}`;\r\n        this.didInit = false;\r\n        this.isExpanded = false;\r\n        this.disabled = false;\r\n        this.cancelText = 'Cancel';\r\n        this.okText = 'OK';\r\n        this.name = this.inputId;\r\n        this.multiple = false;\r\n        this.interface = 'alert';\r\n        this.interfaceOptions = {};\r\n        this.onFocus = () => {\r\n            this.ionFocus.emit();\r\n        };\r\n        this.onBlur = () => {\r\n            this.ionBlur.emit();\r\n        };\r\n    }\r\n    disabledChanged() {\r\n        this.emitStyle();\r\n    }\r\n    valueChanged() {\r\n        if (this.didInit) {\r\n            this.updateOptions();\r\n            this.ionChange.emit({\r\n                value: this.value,\r\n            });\r\n            this.emitStyle();\r\n        }\r\n    }\r\n    async selectOptionChanged() {\r\n        await this.loadOptions();\r\n        if (this.didInit) {\r\n            this.updateOptions();\r\n            this.updateOverlayOptions();\r\n            this.emitStyle();\r\n            if (this.value !== undefined) {\r\n                this.el.forceUpdate();\r\n            }\r\n        }\r\n    }\r\n    onClick(ev) {\r\n        this.setFocus();\r\n        this.open(ev);\r\n    }\r\n    async componentDidLoad() {\r\n        await this.loadOptions();\r\n        if (this.value === undefined) {\r\n            if (this.multiple) {\r\n                const checked = this.childOpts.filter(o => o.selected);\r\n                this.value = checked.map(o => o.value);\r\n            }\r\n            else {\r\n                const checked = this.childOpts.find(o => o.selected);\r\n                if (checked) {\r\n                    this.value = checked.value;\r\n                }\r\n            }\r\n        }\r\n        this.updateOptions();\r\n        this.emitStyle();\r\n        this.el.forceUpdate();\r\n        this.didInit = true;\r\n    }\r\n    async open(ev) {\r\n        if (this.disabled || this.isExpanded) {\r\n            return undefined;\r\n        }\r\n        const overlay = this.overlay = await this.createOverlay(ev);\r\n        this.isExpanded = true;\r\n        overlay.onDidDismiss().then(() => {\r\n            this.overlay = undefined;\r\n            this.isExpanded = false;\r\n            this.setFocus();\r\n        });\r\n        await overlay.present();\r\n        return overlay;\r\n    }\r\n    createOverlay(ev) {\r\n        let selectInterface = this.interface;\r\n        if ((selectInterface === 'action-sheet' || selectInterface === 'popover') && this.multiple) {\r\n            console.warn(`Select interface cannot be \"${selectInterface}\" with a multi-value select. Using the \"alert\" interface instead.`);\r\n            selectInterface = 'alert';\r\n        }\r\n        if (selectInterface === 'popover' && !ev) {\r\n            console.warn('Select interface cannot be a \"popover\" without passing an event. Using the \"alert\" interface instead.');\r\n            selectInterface = 'alert';\r\n        }\r\n        if (selectInterface === 'popover') {\r\n            return this.openPopover(ev);\r\n        }\r\n        if (selectInterface === 'action-sheet') {\r\n            return this.openActionSheet();\r\n        }\r\n        return this.openAlert();\r\n    }\r\n    updateOverlayOptions() {\r\n        if (!this.overlay) {\r\n            return;\r\n        }\r\n        const overlay = this.overlay;\r\n        switch (this.interface) {\r\n            case 'action-sheet':\r\n                overlay.buttons = this.createActionSheetButtons(this.childOpts);\r\n                break;\r\n            case 'popover':\r\n                const popover = overlay.querySelector('ion-select-popover');\r\n                if (popover) {\r\n                    popover.options = this.createPopoverOptions(this.childOpts);\r\n                }\r\n                break;\r\n            default:\r\n                const inputType = (this.multiple ? 'checkbox' : 'radio');\r\n                overlay.inputs = this.createAlertInputs(this.childOpts, inputType);\r\n                break;\r\n        }\r\n    }\r\n    createActionSheetButtons(data) {\r\n        const actionSheetButtons = data.map(option => {\r\n            return {\r\n                role: (option.selected ? 'selected' : ''),\r\n                text: option.textContent,\r\n                handler: () => {\r\n                    this.value = option.value;\r\n                }\r\n            };\r\n        });\r\n        actionSheetButtons.push({\r\n            text: this.cancelText,\r\n            role: 'cancel',\r\n            handler: () => {\r\n                this.ionCancel.emit();\r\n            }\r\n        });\r\n        return actionSheetButtons;\r\n    }\r\n    createAlertInputs(data, inputType) {\r\n        return data.map(o => {\r\n            return {\r\n                type: inputType,\r\n                label: o.textContent,\r\n                value: o.value,\r\n                checked: o.selected,\r\n                disabled: o.disabled\r\n            };\r\n        });\r\n    }\r\n    createPopoverOptions(data) {\r\n        return data.map(o => {\r\n            return {\r\n                text: o.textContent,\r\n                value: o.value,\r\n                checked: o.selected,\r\n                disabled: o.disabled,\r\n                handler: () => {\r\n                    this.value = o.value;\r\n                    this.close();\r\n                }\r\n            };\r\n        });\r\n    }\r\n    async openPopover(ev) {\r\n        const interfaceOptions = this.interfaceOptions;\r\n        const popoverOpts = Object.assign({ mode: this.mode }, interfaceOptions, { component: 'ion-select-popover', cssClass: ['select-popover', interfaceOptions.cssClass], event: ev, componentProps: {\r\n                header: interfaceOptions.header,\r\n                subHeader: interfaceOptions.subHeader,\r\n                message: interfaceOptions.message,\r\n                value: this.value,\r\n                options: this.createPopoverOptions(this.childOpts)\r\n            } });\r\n        return this.popoverCtrl.create(popoverOpts);\r\n    }\r\n    async openActionSheet() {\r\n        const interfaceOptions = this.interfaceOptions;\r\n        const actionSheetOpts = Object.assign({ mode: this.mode }, interfaceOptions, { buttons: this.createActionSheetButtons(this.childOpts), cssClass: ['select-action-sheet', interfaceOptions.cssClass] });\r\n        return this.actionSheetCtrl.create(actionSheetOpts);\r\n    }\r\n    async openAlert() {\r\n        const label = this.getLabel();\r\n        const labelText = (label) ? label.textContent : null;\r\n        const interfaceOptions = this.interfaceOptions;\r\n        const inputType = (this.multiple ? 'checkbox' : 'radio');\r\n        const alertOpts = Object.assign({ mode: this.mode }, interfaceOptions, { header: interfaceOptions.header ? interfaceOptions.header : labelText, inputs: this.createAlertInputs(this.childOpts, inputType), buttons: [\r\n                {\r\n                    text: this.cancelText,\r\n                    role: 'cancel',\r\n                    handler: () => {\r\n                        this.ionCancel.emit();\r\n                    }\r\n                },\r\n                {\r\n                    text: this.okText,\r\n                    handler: (selectedValues) => {\r\n                        this.value = selectedValues;\r\n                    }\r\n                }\r\n            ], cssClass: ['select-alert', interfaceOptions.cssClass,\r\n                (this.multiple ? 'multiple-select-alert' : 'single-select-alert')] });\r\n        return this.alertCtrl.create(alertOpts);\r\n    }\r\n    close() {\r\n        if (!this.overlay) {\r\n            return Promise.resolve(false);\r\n        }\r\n        return this.overlay.dismiss();\r\n    }\r\n    async loadOptions() {\r\n        this.childOpts = await Promise.all(Array.from(this.el.querySelectorAll('ion-select-option')).map(o => o.componentOnReady()));\r\n    }\r\n    updateOptions() {\r\n        let canSelect = true;\r\n        for (const selectOption of this.childOpts) {\r\n            const selected = canSelect && isOptionSelected(this.value, selectOption.value, this.compareWith);\r\n            selectOption.selected = selected;\r\n            if (selected && !this.multiple) {\r\n                canSelect = false;\r\n            }\r\n        }\r\n    }\r\n    getLabel() {\r\n        return findItemLabel(this.el);\r\n    }\r\n    hasValue() {\r\n        return this.getText() !== '';\r\n    }\r\n    getText() {\r\n        const selectedText = this.selectedText;\r\n        if (selectedText != null && selectedText !== '') {\r\n            return selectedText;\r\n        }\r\n        return generateText(this.childOpts, this.value, this.compareWith);\r\n    }\r\n    setFocus() {\r\n        if (this.buttonEl) {\r\n            this.buttonEl.focus();\r\n        }\r\n    }\r\n    emitStyle() {\r\n        this.ionStyle.emit({\r\n            'interactive': true,\r\n            'select': true,\r\n            'has-placeholder': this.placeholder != null,\r\n            'has-value': this.hasValue(),\r\n            'interactive-disabled': this.disabled,\r\n            'select-disabled': this.disabled\r\n        });\r\n    }\r\n    hostData() {\r\n        const labelId = this.inputId + '-lbl';\r\n        const label = findItemLabel(this.el);\r\n        if (label) {\r\n            label.id = labelId;\r\n        }\r\n        return {\r\n            'role': 'combobox',\r\n            'aria-disabled': this.disabled ? 'true' : null,\r\n            'aria-expanded': `${this.isExpanded}`,\r\n            'aria-haspopup': 'dialog',\r\n            'aria-labelledby': labelId,\r\n            class: {\r\n                'in-item': hostContext('ion-item', this.el),\r\n                'select-disabled': this.disabled,\r\n            }\r\n        };\r\n    }\r\n    render() {\r\n        renderHiddenInput(true, this.el, this.name, parseValue(this.value), this.disabled);\r\n        const labelId = this.inputId + '-lbl';\r\n        const label = findItemLabel(this.el);\r\n        if (label) {\r\n            label.id = labelId;\r\n        }\r\n        let addPlaceholderClass = false;\r\n        let selectText = this.getText();\r\n        if (selectText === '' && this.placeholder != null) {\r\n            selectText = this.placeholder;\r\n            addPlaceholderClass = true;\r\n        }\r\n        const selectTextClasses = {\r\n            'select-text': true,\r\n            'select-placeholder': addPlaceholderClass\r\n        };\r\n        return [\r\n            h(\"div\", { class: selectTextClasses }, selectText),\r\n            h(\"div\", { class: \"select-icon\", role: \"presentation\" },\r\n                h(\"div\", { class: \"select-icon-inner\" })),\r\n            h(\"button\", { type: \"button\", onFocus: this.onFocus, onBlur: this.onBlur, disabled: this.disabled, ref: (el => this.buttonEl = el) })\r\n        ];\r\n    }\r\n    static get is() { return \"ion-select\"; }\r\n    static get encapsulation() { return \"shadow\"; }\r\n    static get properties() { return {\r\n        \"actionSheetCtrl\": {\r\n            \"connect\": \"ion-action-sheet-controller\"\r\n        },\r\n        \"alertCtrl\": {\r\n            \"connect\": \"ion-alert-controller\"\r\n        },\r\n        \"cancelText\": {\r\n            \"type\": String,\r\n            \"attr\": \"cancel-text\"\r\n        },\r\n        \"compareWith\": {\r\n            \"type\": String,\r\n            \"attr\": \"compare-with\"\r\n        },\r\n        \"disabled\": {\r\n            \"type\": Boolean,\r\n            \"attr\": \"disabled\",\r\n            \"watchCallbacks\": [\"disabledChanged\"]\r\n        },\r\n        \"el\": {\r\n            \"elementRef\": true\r\n        },\r\n        \"interface\": {\r\n            \"type\": String,\r\n            \"attr\": \"interface\"\r\n        },\r\n        \"interfaceOptions\": {\r\n            \"type\": \"Any\",\r\n            \"attr\": \"interface-options\"\r\n        },\r\n        \"isExpanded\": {\r\n            \"state\": true\r\n        },\r\n        \"mode\": {\r\n            \"type\": String,\r\n            \"attr\": \"mode\"\r\n        },\r\n        \"multiple\": {\r\n            \"type\": Boolean,\r\n            \"attr\": \"multiple\"\r\n        },\r\n        \"name\": {\r\n            \"type\": String,\r\n            \"attr\": \"name\"\r\n        },\r\n        \"okText\": {\r\n            \"type\": String,\r\n            \"attr\": \"ok-text\"\r\n        },\r\n        \"open\": {\r\n            \"method\": true\r\n        },\r\n        \"placeholder\": {\r\n            \"type\": String,\r\n            \"attr\": \"placeholder\"\r\n        },\r\n        \"popoverCtrl\": {\r\n            \"connect\": \"ion-popover-controller\"\r\n        },\r\n        \"selectedText\": {\r\n            \"type\": String,\r\n            \"attr\": \"selected-text\"\r\n        },\r\n        \"value\": {\r\n            \"type\": \"Any\",\r\n            \"attr\": \"value\",\r\n            \"mutable\": true,\r\n            \"watchCallbacks\": [\"valueChanged\"]\r\n        }\r\n    }; }\r\n    static get events() { return [{\r\n            \"name\": \"ionChange\",\r\n            \"method\": \"ionChange\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true\r\n        }, {\r\n            \"name\": \"ionCancel\",\r\n            \"method\": \"ionCancel\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true\r\n        }, {\r\n            \"name\": \"ionFocus\",\r\n            \"method\": \"ionFocus\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true\r\n        }, {\r\n            \"name\": \"ionBlur\",\r\n            \"method\": \"ionBlur\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true\r\n        }, {\r\n            \"name\": \"ionStyle\",\r\n            \"method\": \"ionStyle\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true\r\n        }]; }\r\n    static get listeners() { return [{\r\n            \"name\": \"ionSelectOptionDidLoad\",\r\n            \"method\": \"selectOptionChanged\"\r\n        }, {\r\n            \"name\": \"ionSelectOptionDidUnload\",\r\n            \"method\": \"selectOptionChanged\"\r\n        }, {\r\n            \"name\": \"click\",\r\n            \"method\": \"onClick\"\r\n        }]; }\r\n    static get style() { return \".sc-ion-select-md-h{padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);display:-ms-flexbox;display:flex;position:relative;font-family:var(--ion-font-family,inherit);overflow:hidden;z-index:2}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.sc-ion-select-md-h{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.in-item.sc-ion-select-md-h{position:static;max-width:45%}.select-disabled.sc-ion-select-md-h{opacity:.4;pointer-events:none}.ion-focused.sc-ion-select-md-h   button.sc-ion-select-md{border:2px solid #5e9ed6}.select-placeholder.sc-ion-select-md{color:currentColor;opacity:.33}button.sc-ion-select-md{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl].sc-ion-select-md-h   button.sc-ion-select-md, [dir=rtl]   .sc-ion-select-md-h   button.sc-ion-select-md{right:0}button.sc-ion-select-md::-moz-focus-inner{border:0}.select-icon.sc-ion-select-md{position:relative}.select-text.sc-ion-select-md{-ms-flex:1;flex:1;min-width:16px;font-size:inherit;text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.select-icon-inner.sc-ion-select-md{left:5px;top:50%;margin-top:-3px;position:absolute;width:0;height:0;border-top:5px solid;border-right:5px solid transparent;border-left:5px solid transparent;color:currentColor;opacity:.33;pointer-events:none}[dir=rtl].sc-ion-select-md-h   .select-icon-inner.sc-ion-select-md, [dir=rtl]   .sc-ion-select-md-h   .select-icon-inner.sc-ion-select-md{right:5px}.sc-ion-select-md-h{--padding-top:10px;--padding-end:0;--padding-bottom:11px;--padding-start:16px}.select-icon.sc-ion-select-md{width:19px;height:19px}\"; }\r\n    static get styleMode() { return \"md\"; }\r\n}\r\nfunction parseValue(value) {\r\n    if (value == null) {\r\n        return undefined;\r\n    }\r\n    if (Array.isArray(value)) {\r\n        return value.join(',');\r\n    }\r\n    return value.toString();\r\n}\r\nfunction isOptionSelected(currentValue, compareValue, compareWith) {\r\n    if (currentValue === undefined) {\r\n        return false;\r\n    }\r\n    if (Array.isArray(currentValue)) {\r\n        return currentValue.some(val => compareOptions(val, compareValue, compareWith));\r\n    }\r\n    else {\r\n        return compareOptions(currentValue, compareValue, compareWith);\r\n    }\r\n}\r\nfunction compareOptions(currentValue, compareValue, compareWith) {\r\n    if (typeof compareWith === 'function') {\r\n        return compareWith(currentValue, compareValue);\r\n    }\r\n    else if (typeof compareWith === 'string') {\r\n        return currentValue[compareWith] === compareValue[compareWith];\r\n    }\r\n    else {\r\n        return currentValue === compareValue;\r\n    }\r\n}\r\nfunction generateText(opts, value, compareWith) {\r\n    if (value === undefined) {\r\n        return '';\r\n    }\r\n    if (Array.isArray(value)) {\r\n        return value\r\n            .map(v => textForValue(opts, v, compareWith))\r\n            .filter(opt => opt !== null)\r\n            .join(', ');\r\n    }\r\n    else {\r\n        return textForValue(opts, value, compareWith) || '';\r\n    }\r\n}\r\nfunction textForValue(opts, value, compareWith) {\r\n    const selectOpt = opts.find(opt => {\r\n        return compareOptions(opt.value, value, compareWith);\r\n    });\r\n    return selectOpt\r\n        ? selectOpt.textContent\r\n        : null;\r\n}\r\nlet selectIds = 0;\n\nclass SelectOption {\r\n    constructor() {\r\n        this.inputId = `ion-selopt-${selectOptionIds++}`;\r\n        this.disabled = false;\r\n        this.selected = false;\r\n    }\r\n    componentWillLoad() {\r\n        if (this.value === undefined) {\r\n            this.value = this.el.textContent || '';\r\n        }\r\n    }\r\n    componentDidLoad() {\r\n        this.ionSelectOptionDidLoad.emit();\r\n    }\r\n    componentDidUnload() {\r\n        this.ionSelectOptionDidUnload.emit();\r\n    }\r\n    hostData() {\r\n        return {\r\n            'role': 'option',\r\n            'id': this.inputId\r\n        };\r\n    }\r\n    static get is() { return \"ion-select-option\"; }\r\n    static get encapsulation() { return \"shadow\"; }\r\n    static get properties() { return {\r\n        \"disabled\": {\r\n            \"type\": Boolean,\r\n            \"attr\": \"disabled\"\r\n        },\r\n        \"el\": {\r\n            \"elementRef\": true\r\n        },\r\n        \"selected\": {\r\n            \"type\": Boolean,\r\n            \"attr\": \"selected\"\r\n        },\r\n        \"value\": {\r\n            \"type\": \"Any\",\r\n            \"attr\": \"value\",\r\n            \"mutable\": true\r\n        }\r\n    }; }\r\n    static get events() { return [{\r\n            \"name\": \"ionSelectOptionDidLoad\",\r\n            \"method\": \"ionSelectOptionDidLoad\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true\r\n        }, {\r\n            \"name\": \"ionSelectOptionDidUnload\",\r\n            \"method\": \"ionSelectOptionDidUnload\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true\r\n        }]; }\r\n    static get style() { return \".sc-ion-select-option-h{display:none}\"; }\r\n}\r\nlet selectOptionIds = 0;\n\nclass SelectPopover {\r\n    constructor() {\r\n        this.options = [];\r\n    }\r\n    onSelect(ev) {\r\n        const option = this.options.find(o => o.value === ev.target.value);\r\n        if (option && option.handler) {\r\n            option.handler();\r\n        }\r\n    }\r\n    render() {\r\n        return (h(\"ion-list\", null,\r\n            this.header !== undefined && h(\"ion-list-header\", null, this.header),\r\n            (this.subHeader !== undefined || this.message !== undefined) &&\r\n                h(\"ion-item\", null,\r\n                    h(\"ion-label\", { \"text-wrap\": true },\r\n                        this.subHeader !== undefined && h(\"h3\", null, this.subHeader),\r\n                        this.message !== undefined && h(\"p\", null, this.message))),\r\n            h(\"ion-radio-group\", null, this.options.map(option => h(\"ion-item\", null,\r\n                h(\"ion-label\", null, option.text),\r\n                h(\"ion-radio\", { checked: option.checked, value: option.value, disabled: option.disabled }))))));\r\n    }\r\n    static get is() { return \"ion-select-popover\"; }\r\n    static get encapsulation() { return \"scoped\"; }\r\n    static get properties() { return {\r\n        \"header\": {\r\n            \"type\": String,\r\n            \"attr\": \"header\"\r\n        },\r\n        \"message\": {\r\n            \"type\": String,\r\n            \"attr\": \"message\"\r\n        },\r\n        \"options\": {\r\n            \"type\": \"Any\",\r\n            \"attr\": \"options\"\r\n        },\r\n        \"subHeader\": {\r\n            \"type\": String,\r\n            \"attr\": \"sub-header\"\r\n        }\r\n    }; }\r\n    static get listeners() { return [{\r\n            \"name\": \"ionSelect\",\r\n            \"method\": \"onSelect\"\r\n        }]; }\r\n    static get style() { return \".sc-ion-select-popover-h   ion-list.sc-ion-select-popover{margin-left:0;margin-right:0;margin-top:-1px;margin-bottom:-1px}.sc-ion-select-popover-h   ion-label.sc-ion-select-popover, .sc-ion-select-popover-h   ion-list-header.sc-ion-select-popover{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}\"; }\r\n}\n\nexport { Select as IonSelect, SelectOption as IonSelectOption, SelectPopover as IonSelectPopover };\n"],"sourceRoot":""}